Rocoto: &Rocoto
  scheduler: !calc doc.scheduler
  max_tries: 1

  workflow_xml: !expand |
    <?xml version="1.0"?>
    <!DOCTYPE workflow [
      <!ENTITY LOG_DIR "{doc.places.ROTDIR}/logs">
      <!ENTITY TASK_THROTTLE "5">
      <!ENTITY QUEUE "{doc.platform.exclusive_accounting.queue}">
      <!ENTITY QUEUESHARED "{doc.platform.shared_accounting.queue}">
      <!ENTITY QUEUESERV "{doc.platform.service_accounting.queue}">
      <!ENTITY CPU_PROJECT "{doc.accounting.cpu_project}">
      <!ENTITY CYCLE_THROTTLE "2">
      <!ENTITY MAX_TRIES "{suite.Rocoto.max_tries}">
      <!ENTITY EXPDIR "{doc.places.EXPDIR}">
      <!ENTITY PSLOT "{doc.names.experiment}">
      {suite.common_metasched_vars}
    ]>
    <workflow realtime="F"
              cyclethrottle="&CYCLE_THROTTLE;"
              scheduler="{sched.rocoto_name.lower()}"
              taskthrottle="&TASK_THROTTLE;" >
      <log><cyclestr>&COM;/logs/@Y@m@d@H/rocoto.log</cyclestr></log>
    {to_rocoto.make_time_xml(indent=1)}
    {to_rocoto.make_task_xml(indent=1)}
    </workflow>

rocoto_task_template: &rocoto_task_template !expand |
    <command>{doc.places.HOMEgfs}/jobs/{J_JOB}</command>
    {sched.rocoto_accounting(accounting,
        jobname=task_path_var,
        outerr="<cyclestr>&LOG_DIR;/@Y@m@d@H/"+task_path_var+".log</cyclestr>")}
    {sched.rocoto_resources(resources)}
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
