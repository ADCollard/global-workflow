config_fcst:
  filename: config.fcst
  more_exports_for_microphys: !FirstTrue
    - when: !calc ( doc.fv3_settings.imp_physics==11 )
      do: !expand |
        export hord_mt_nh_nonmono={doc.fv3_settings.hord_mt_nh_nonmono}
        export hord_xx_nh_nonmono={doc.fv3_settings.hord_xx_nh_nonmono}
        export vtdm4_nh_nonmono={doc.fv3_settings.vtdm4_nh_nonmono}
        export nord={doc.fv3_settings.nord}
        export dddmp={doc.fv3_settings.dddmp}
        export d4_bg={doc.fv3_settings.d4_bg}
    - otherwise: ""
  content:
    #!/bin/ksh -x
    
    ########## config.fcst ##########
    # Forecast specific
    
    echo "BEGIN: config.fcst"
    
    # Source model specific information that is resolution dependent
    . $EXPDIR/config.fv3 $CASE
    
    # Get task specific resources
    . $EXPDIR/config.resources $CDUMP
    
    if [ $DONST = "YES" ]; then
        . $EXPDIR/config.nsst
    fi
    
    export FORECASTSH="$HOMEgfs/scripts/exglobal_fcst_nemsfv3gfs.sh"
    #export FCSTEXECDIR="$HOMEfv3gfs/NEMS/exe"
    export FCSTEXECDIR="$HOMEgfs/exec"
    export FCSTEXEC="fv3_gfs_nh.prod.32bit.x"
    if [[ "$CDUMP" == gfs ]] ; then
      export npe_fv3={doc.resources.run_gfsfcst.total_ranks()}
    elif [[ "$CDUMP" == gdas ]] ; then
      export npe_fv3={doc.resources.run_gdasfcst.total_ranks()}
    else
      err_exit "Bad cdump: $CDUMP should be gfs or gdas"
    fi
    export npe_fcst=$npe_fv3
    
    # Model configuration
    export TYPE="{doc.fv3_settings.nh_type}"
    export MONO="{doc.fv3_settings.MONO}"
    
    # Use stratosphere h2o physics
    export h2o_phys="{tools.fort(doc.fv3_settings_template.h2o_phys}"
    
    # Options of stratosphere O3 physics reaction coefficients
    export new_o3forc="{tools.YES_NO(doc.fv3_settings_template.new_o3force"
    
    # Microphysics configuration
    export dnats={doc.fv3_settings.dnats}
    export cal_pre={tools.fort(doc.fv3_settings.cal_pre)}
    export do_sat_adj={tools.fort(doc.fv3_settings.do_sat_adj)}
    export random_clds={tools.fort(doc.fv3_settings.random_clds)}
    export cnvcld={tools.fort(doc.fv3_settings.cnvcld)}
    export ncld={doc.fv3_settings.ncld}
    export nwat={doc.fv3_settings.nwat}
    export FIELD_TABLE="{doc.fv3_settings.FIELD_TABLE}"
    {more_exports_for_microphys}

    #---------------------------------------------------------------------
    
    
    # Disable the use of coupler.res; get model start time from model_configure
    export USE_COUPLER_RES="NO"
    
    if [[ "$CDUMP" == "gdas" ]] ; then # GDAS cycle specific parameters
    
        # Variables used in DA cycling
        if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da"
        else
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da_orig"
        fi
    
        # Write restart files at next assimilation time
        export restart_interval=6
        export npe_remap={doc.resources.run_gdasremap.total_ranks()}
        export nth_remap={sched.nodes.omp_threads_for(doc.resources.run_gdasremap[0])}
    elif [[ "$CDUMP" == "gfs" ]] ; then # GFS cycle specific parameters
    
        # Write more variables to output
        if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table"
        else
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_orig"
        fi
        export npe_remap={doc.resources.run_gfsremap.total_ranks()}
        export nth_remap={sched.nodes.omp_threads_for(doc.resources.run_gfsremap[0])}
    fi
    
    # Regrid tiles to global Gaussian grid in NEMSIO
    export REGRID_NEMSIO_SH="$HOMEgfs/ush/fv3gfs_regrid_nemsio.sh"
    if [ $DONST = YES ]; then
        export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da.txt"
    else
        export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da_nonsst.txt"
    fi
    
    # Remap tiles to global latlon grid in NetCDF
    export REMAPSH="$HOMEgfs/ush/fv3gfs_remap.sh"
    export master_grid="{doc.case.master_grid}"
    
    # Global latlon NetCDF to nemsio utility parameters
    export NC2NEMSIOSH="$HOMEgfs/ush/fv3gfs_nc2nemsio.sh"
    
    # Remember config.efcs will over-ride these values for ensemble forecasts
    # if these variables are re-defined there.
    # Otherwise, the ensemble forecast will inherit from config.fcst
    
    echo "END: config.fcst"
    
