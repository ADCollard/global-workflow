# grid-to-obs - upper_air step 1a configurations
#
[dir]
#
OUTPUT_BASE = {ENV[rundir_g2o1]}
LOG_DIR = {ENV[rundir_g2o1]}/logs/{ENV[exp]}
TMP_DIR = /tmp

## Input data directories
## This is the location of your input files for METplus
#
# PB2NC
#
# this is the name of model (and subdir to PREPBUFR_DATA_DIR)
# ex: nam for NAM or gdas for GDAS dir
PREPBUFR_MODEL_DIR_NAME = {ENV[prepbufr_upper_air]}
PB2NC_OUTPUT_DIR = {ENV[pb2nc_upper_air_dir]}
## Used with OUTPUT_BASE to create the output directory from PB2NC
PREPBUFR_DATA_DIR = {ENV[rundir_g2o1]}/data/prepbufr
#
[config]
#
LOG_METPLUS = {LOG_DIR}/master_metplus.log.g2oupperair_step1a.for{ENV[VDATE]}{ENV[vhr]}.runon{LOG_TIMESTAMP_TEMPLATE}
METPLUS_CONF = {OUTPUT_BASE}/confs/{ENV[exp]}/metplus_final_g2oupperair_step1a.for{ENV[VDATE]}{ENV[vhr]}.conf
#
## Configuration-related settings such as the process list, begin and end times, etc.
PROCESS_LIST = PB2NC

[config]
## LOOP_METHOD
## Options are: processes, times
## Looping by time- runs all items in the PROCESS_LIST for each
## initialization time and repeats until all times have been evaluated.
## Looping by processes- run each item in the PROCESS_LIST for all
## specified initialization times then repeat for the next item in the
## PROCESS_LIST.
LOOP_METHOD = processes

# Logging levels: DEBUG, INFO, WARN, ERROR (most verbose is DEBUG)
LOG_LEVEL = DEBUG

## OVERWRITE OPTIONS
## Don't overwrite files if they already exist.
## Set to no if you do NOT want to override existing files
## Set to yes if you do want to override existing files
OVERWRITE_NC_OUTPUT = yes

# Time method by which to perform validation, either by init time or by valid
# time. Indicate by either BY_VALID or BY_INIT
TIME_METHOD = BY_VALID

## MET Configuration files for pb2nc and point_stat
PB2NC_CONFIG_FILE =  {ENV[metplusconfig]}/met_config/METV{ENV[METver]}/PB2NCConfig_upper_air

# For processing by init time or valid time, indicate the start and end hours
# in HH format
START_HOUR = {ENV[vhr]}
END_HOUR = {ENV[vhr]}

# Indicate the begin and end date, and interval (in hours)
BEG_TIME = {ENV[VDATE]}
END_TIME = {ENV[VDATE]}
# Used by pb2nc
INTERVAL_TIME = 86400

# For both pb2nc and point_stat, the obs_window dictionary:
OBS_WINDOW_BEGIN = -2700
OBS_WINDOW_END = 2700

# start and end dates are created by combining the date with
# start and end hours (format can be hh, hhmm, or hhmmss.
START_DATE = {BEG_TIME}{START_HOUR}
END_DATE = {END_TIME}{END_HOUR}

# Either conus_sfc or upper_air
VERTICAL_LOCATION = upper_air

#
# PB2NC
#
# These are appended with PB2NC to differentiate the GRID, POLY, and MESSAGE_TYPE for point_stat.
PB2NC_GRID =
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all
OBS_BUFR_VAR_LIST = QOB, TOB, ZOB, UOB, VOB, D_RH

#***********
# ***NOTE***
#***********
# SET TIME_SUMMARY_FLAG to False. There is a bug in met-6.1.
## For defining the time periods for summarization
# False for no time summary, True otherwise
TIME_SUMMARY_FLAG = False
TIME_SUMMARY_BEG = 000000  ;; start time of time summary in HHMMSS format
TIME_SUMMARY_END = 235959  ;; end time of time summary in HHMMSS format
TIME_SUMMARY_VAR_NAMES = PMO,TOB,TDO,UOB,VOB,PWO,TOCC
TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80  ;; a list of the statistics to summarize
#
##  FILENAME TEMPLATES
#
[filename_templates]
## Output file template
#
# PB2NC
#
# For GDAS (upper air)
NC_FILE_TMPL = prepbufr.{valid?fmt=%Y%m%d%H}.nc

#
## REGEX PATTERN
#
[regex_pattern]
#
# PB2NC
#
## Define prepBUFR input directory and filename patterns, place parenthesis
## around any YMD, cycle time, and offset (fhr)
PREPBUFR_DIR_REGEX =
PREPBUFR_FILE_REGEX = .*prepbufr.(2[0-9]{9})
