#!/bin/sh

# LSBATCH: User input
#BSUB -J jgdas_gempak_meta_00
#BSUB -o /gpfs/hps/ptmp/Boi.Vuong/output/gdas_gempak_meta_00.o%J
#BSUB -e /gpfs/hps/ptmp/Boi.Vuong/output/gdas_gempak_meta_00.o%J
#BSUB -L /bin/sh
#BSUB -W 00:30
#BSUB -q "dev_shared"
#BSUB -cwd /gpfs/hps/ptmp/Boi.Vuong/output
#BSUB -P GFS-T2O
#BSUB -R rusage[mem=1000]

export OMP_NUM_THREADS=1
export OMP_STACKSIZE=1024m
export MP_LABELIO=yes
export MP_STDOUTMODE=ordered

export PDY=20161103
# export PDY=20161022
export PDY1=`expr $PDY - 1`

export cyc=06
export cycle=t${cyc}z

set -xa
export PS4='$SECONDS + '
date

####################################
##  Load the GRIB Utilities module
#####################################

#%include <head.h>
#%include <envir-p2.h>

. /opt/modules/3.2.6.7/init/sh
module load PrgEnv-intel/5.2.56
module load cfp-intel-sandybridge/1.1.0
module load ESMF-intel-sandybridge/3_1_0rp5
module load iobuf
module load craype-hugepages2M
module load craype-haswell
module load prod_envir
module load prod_util/1.0.4
#
#   This is a test version of GRIB_UTIL.v1.0.4 on CRAY
#
module unload grib_util/1.0.3
module use /gpfs/hps/nco/ops/nwtest/modulefiles
module load grib_util/1.0.4

module list

############################################
# GDAS GEMPAK META PRODUCT GENERATION
############################################

##############################################
# Define COM, PCOM, COMIN  directories
##############################################

# set envir=prod or para to test with data in prod or para
# export envir=para
 export envir=prod

export SENDDBN=NO
export job=gfs_gempak_meta_${cyc}
export pid=${pid:-$$}
export jobid=${job}.${pid}
export DATAROOT=/gpfs/hps/ptmp/Boi.Vuong/output
export NWROOT=/gpfs/hps/emc/global/noscrub/Boi.Vuong/svn
export COMROOT2=/gpfs/hps/ptmp/Boi.Vuong/com
export PCOMROOT2=/gpfs/hps/ptmp/Boi.Vuong/pcom/${envir}

mkdir -m 775 -p ${COMROOT2} ${COMROOT2}/logs ${COMROOT2}/logs/jlogfiles $PCOMROOT2
export jlogfile=${COMROOT2}/logs/jlogfiles/jlogfile.${jobid}

#############################################################
# Specify versions
#############################################################
export gdas_ver=v14.1.0
export gfs_ver=v14.1.0
export util_ver=v1.0.4

##########################################################
# obtain unique process id (pid) and make temp directory
##########################################################
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p $DATA
cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=${cycle:-t${cyc}z}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
# KEEPDATA=NO--Remove temporary working
############################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

################################
# Set up the HOME directory
################################
export HOMEgdas=${HOMEgdas:-${NWROOT}/gdas.${gdas_ver}}
export EXECgdas=${EXECgdas:-$HOMEgdas/exec}
export PARMgdas=${PARMgdas:-$HOMEgdas/parm}
export FIXgdas=${FIXgdas:-$HOMEgdas/gempak/fix}
export USHgdas=${USHgdas:-$HOMEgdas/gempak/ush}
export SRCgdas=${SRCgdas:-$HOMEgdas/scripts}

######################################
# Set up the GEMPAK directory
#######################################
export HOMEgempak=${HOMEgempak:-${NWROOTp1}/gempak}
export FIXgempak=${FIXgempak:-$HOMEgempak/fix}
export USHgempak=${USHgempak:-$HOMEgempak/ush}

###########################################
# Now set up GEMPAK/NTRANS environment
###########################################
module load gempak/7.3.0

cp $FIXgdas/datatype.tbl datatype.tbl

###################################
# Specify NET and RUN Name and model
####################################
export RUN=${RUN:-gdas}

export DBN_ALERT_TYPE=GDAS_METAFILE

##############################################
# Define COM directories
##############################################
# export COMIN=${COMIN:-${COMROOT}/nawips/${envir}/${RUN}.${PDY}}
# export COMOUT=${COMOUT:-${COMROOT}/nawips/${envir}/${RUN}.${PDY}/meta}

export COMINROOTukmet=${COMINROOTukmet:-${COMROOTp1}/nawips/prod}
export COMINROOTecmwf=${COMINROOTecmwf:-${COMROOTp2}/nawips/prod}

# export COMOUTROOTukmet=${COMROOTp1}/nawips/$envir
# export COMOUTROOTecmwf=${COMROOTp2}/nawips/$envir


if [ $envir = "prod" ] ; then
#  This setting is for testing with GDAS (production)
  export COMIN=${COMROOTp2}/nawips/prod/gdas.${PDY}
else
#  export COMIN=/gpfs/hps/ptmp/Boi.Vuong/com/nawips/para/gdas.${PDY}           ### EMC PARA Realtime NOTE: data are not available some time
  export COMIN=/gpfs/hps/emc/global/noscrub/Boi.Vuong/para_nawips_gdas_${PDY}  ### test with canned data  ###
fi

export COMOUT=${COMOUT:-${COMROOT2}/nawips/${envir}/${RUN}.${PDY}/meta}
export COMOUTROOTukmet=${COMROOT2}/nawips/${envir}
export COMOUTROOTecmwf=${COMROOT2}/nawips/${envir}

if [ $SENDCOM = YES ] ; then
  mkdir -m 775 -p $COMOUT $COMOUTROOTukmet $COMOUTROOTecmwf
fi

export pgmout=OUTPUT.$$

env

########################################################
# Execute the script.
$USHgdas/gdas_meta_na.sh
$USHgdas/gdas_ecmwf_meta_ver.sh
$USHgdas/gdas_meta_loop.sh
$USHgdas/gdas_ukmet_meta_ver.sh
export err=$?; err_chk
########################################################

msg="JOB $job HAS COMPLETED NORMALLY!"
postmsg $jlogfile "$msg"

############################################
# print exec I/O output
############################################
if [ -e "$pgmout" ] ; then
  cat $pgmout
fi

###################################
# Remove temp directories
###################################
if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date
