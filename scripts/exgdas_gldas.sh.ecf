#!/bin/ksh
set -x

###################################################################
# This script runs the global land analysis
# Usage: exgdas_gldas.sh.ecf
# History:  
#  20191015 Jesse Meng and Youlong Xia, first version
#  20191123 Fanglin Yang, restructure for global workflow
###################################################################
#
# 
#################################
# Set up UTILITIES
#################################
export FINDDATE=${FINDDATE:-$HOMEgldas/util/ush/finddate.sh}
export utilexec=${utilexec:-/gpfs/dell1/nco/ops/nwprod/grib_util.v1.1.0/exec}
export CNVGRIB=${CNVGRIB:-$utilexec/cnvgrib}
export WGRIB=${WGRIB:-$utilexec/wgrib}
export WGRIB2=${WGRIB2:-$utilexec/wgrib2}
export COPYGB=${COPYGB:-$utilexec/copygb}
export NDATE=${NDATE:-/gpfs/dell1/nco/ops/nwprod/prod_util.v1.1.0/exec/ips/ndate}
export DCOMIN=${DCOMIN:-${DCOMROOT:-"/gpfs/dell1/nco/ops/dcom"}}
export COMINgdas=${COMINgdas:-$ROTDIR}

#################################
# Set up the running environment
#################################
export assim_freq=${assim_freq:-6}
export gldas_spinup_hours=${gldas_spinup_hours:-72}
export gldas_cdate=$CDATE
export gldas_eymd=`echo $gldas_cdate |cut -c 1-8`                 
export gldas_ecyc=`echo $gldas_cdate |cut -c 9-10`                 
export gldas_sdate=`$NDATE -$gldas_spinup_hours $CDATE`
export gldas_symd=`echo $gldas_sdate |cut -c 1-8`                 
export gldas_scyc=`echo $gldas_sdate |cut -c 9-10`                 
echo "GLDAS runs from $gldas_sdate to $gldas_cdate"

export RUNENDDATE=$gldas_eymd                          
export RUNSTARTDATE=$gldas_symd

export CASE=${CASE:-C768}
export res=$(echo $CASE |cut -c2-5)
export JCAP=$((2*res-2))               
export topodir=$HOMEgfs/fix/fix_fv3_gmted2010/$CASE/

DATA=${DATA:-$pwd/gldastmp$$}    
mkdata=NO
if [ ! -d $DATA ]; then
   mkdata=YES
   mkdir -p $DATA
fi
cd $DATA || exit 8
export RUNDIR=$DATA


#################################
GDAS=${RUNDIR}/force
mkdir -p $GDAS

input1=$COMINgdas/gdas.$gldas_symd/$gldas_scyc/RESTART
input2=$COMINgdas/gdas.$gldas_eymd/$gldas_ecyc/RESTART
[[ -d $RUNDIR/input ]] && rm -f $RUNDIR/input
[[ -d $RUNDIR ]]       && rm -f $RUNDIR/FIX
[[ -f $RUNDIR/LIS ]]   && rm -f $RUNDIR/LIS
mkdir -p $RUNDIR/input
ln -fs $GDAS $RUNDIR/input/GDAS
ln -fs $FIXgldas $RUNDIR/FIX
ln -fs $EXECgldas/gldas_${model} $RUNDIR/LIS


#---------------------------------------------------------------
### 1) Get gdas 6-tile netcdf restart file and gdas forcing data
#---------------------------------------------------------------
${USHgldas}/gldas_get_data.sh $gldas_sdate $gldas_cdate
export err=$?; err_chk


#---------------------------------------------------------------
### 2) Get CPC daily precip and temporally disaggreated 
#---------------------------------------------------------------
${USHgldas}/gldas_forcing.sh $RUNSTARTDATE $RUNENDDATE
export err=$?; err_chk

# spatially disaggregated
yyyymmdd=$RUNSTARTDATE
while [ $yyyymmdd -lt $RUNENDDATE ]; do
  gds='255 4 3072 1536 89909 0 128 -89909 -117 117 768 0 0 0 0 0 0 0 0 0 255 0 0 0 0 0'
  $COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}00 $RUNDIR/cmap.gdas.${yyyymmdd}00
  $COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}06 $RUNDIR/cmap.gdas.${yyyymmdd}06
  $COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}12 $RUNDIR/cmap.gdas.${yyyymmdd}12
  $COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}18 $RUNDIR/cmap.gdas.${yyyymmdd}18
  yyyymmdd=`sh $FINDDATE $yyyymmdd d+1`
done

# create configure file
${USHgldas}/gldas_liscrd.sh $RUNSTARTDATE $RUNENDDATE ${JCAP}
export err=$?; err_chk


#---------------------------------------------------------------
### 3) Produce initials noah.rst from 6-tile gdas restart files 
#---------------------------------------------------------------
rm -f fort.41 fort.11 fort.12

# 3a) create gdas2gldas input file ----
cat >> fort.41 << EOF
 &config
   data_dir_input_grid="$input1"
   sfc_files_input_grid="${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile1.nc","${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile2.nc","${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile3.nc","${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile4.nc","${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile5.nc","${gldas_symd}.${gldas_scyc}0000.sfcanl_data.tile6.nc"
   orog_dir_input_grid="$topodir"
   orog_files_input_grid="${CASE}_oro_data.tile1.nc","${CASE}_oro_data.tile2.nc","${CASE}_oro_data.tile3.nc","${CASE}_oro_data.tile4.nc","${CASE}_oro_data.tile5.nc","${CASE}_oro_data.tile6.nc"
   model="$model"
 /
EOF


# 3b) Use gdas2gldas to generate nemsio file 
export OMP_NUM_THREADS=1
$APRUN_GAUSSIAN ${EXECgldas}/gdas2gldas  
export err=$?; err_chk


# 3c)gldas_noah_rst/gldas_noahmp_rst to generate noah.rst 
sfcanl=sfc.gaussian.nemsio
ln -fs ${FIXgldas}/lmask_gfs_T${JCAP}.bfsa fort.11
ln -fs $sfcanl fort.12

${EXECgldas}/gldas_${model}_rst
export err=$?; err_chk

mv $sfcanl ${sfcanl}.$RUNSTARTDATE


#---------------------------------------------------------------
### 4) run noah/noahmp model
#---------------------------------------------------------------
$APRUN_GLDAS ./LIS 
export err=$?; err_chk

#---------------------------------------------------------------
### 5) using gdas2gldas to generate nemsio file for RUNENDDATE
###    use gldas_post to replace soil moisture and temperature
###    use gldas2gdas to produce 6-tile restart file
#---------------------------------------------------------------
rm -f fort.41 fort.42

# 5a) create input file for gdas2gldas
cat >> fort.41 << EOF
 &config
   data_dir_input_grid="$input2"
   sfc_files_input_grid="${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile1.nc","${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile2.nc","${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile3.nc","${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile4.nc","${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile5.nc","${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile6.nc"
   orog_dir_input_grid="$topodir"
   orog_files_input_grid="${CASE}_oro_data.tile1.nc","${CASE}_oro_data.tile2.nc","${CASE}_oro_data.tile3.nc","${CASE}_oro_data.tile4.nc","${CASE}_oro_data.tile5.nc","${CASE}_oro_data.tile6.nc"
   model="$model"
 /
EOF


# 5b) use gdas2gldas to produce nemsio file
export OMP_NUM_THREADS=1
$APRUN_GAUSSIAN ${EXECgldas}/gdas2gldas
export err=$?; err_chk


# 5c) use gldas_post to replace soil moisture and temperature
yyyy=`echo $RUNENDDATE | cut -c1-4`
gbin=$RUNDIR/EXP901/NOAH/$yyyy/$RUNENDDATE/LIS.E901.${RUNENDDATE}00.NOAHgbin
sfcanl=sfc.gaussian.nemsio
export OMP_NUM_THREADS=1
${USHgldas}/gldas_post.sh $gbin $sfcanl 


# 5d) use gldas2gdas to create 6-tile restart tiles
cat >> fort.42 << EOF
 &config
   orog_dir_gdas_grid="$topodir"
 /
EOF

# copy gdas netcdf tiles
k=1; while [ $k -le 6 ]; do
 cp ${GDAS}/gdas.${gldas_eymd}/${gldas_eymd}.${gldas_ecyc}0000.sfcanl_data.tile${k}.nc  sfc_data.tile${k}.nc
 k=$((k+1))
done

# copy soil type
cp ${FIXgldas}/stype_gfs_T${JCAP}.bfsa  stype_gfs_T${JCAP}.bfsa

export OMP_NUM_THREADS=1
$APRUN_GAUSSIAN $EXECgldas/gldas2gdas
export err=$?; err_chk


# 5e) archive gldas results
export OMP_NUM_THREADS=1
${USHgldas}/gldas_archive.sh $RUNSTARTDATE $RUNENDDATE 
export err=$?; err_chk


#------------------------------------------------------------------
# Clean up before leaving
if [ $mkdata = "YES" ]; then rm -rf $DATA; fi

set +x
if [ $VERBOSE = "YES" ] ; then
  echo $(date) EXITING $0 with return code $err >&2
fi
exit 0

