#!/bin/ksh 

set -xa

export RUN_ENVIR=${RUN_ENVIR:-nco}
if [ $RUN_ENVIR != nco ] ; then
  PBEG=${PBEG:-""}
  $PBEG
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/para_gfs/pr4devb/para_config}
  export userid=$LOGNAME
fi

export PS4='$SECONDS + '
date

# #### 02/02/16 #####################
# SETUP GFS FCST PROCESSING VARIABLES
# ###################################

#####################################
# obtain unique process id (pid) and make temp directory
#####################################
export pid=${pid:-$$}
export DATAROOT=${DATAROOT:-/tmpnwprd1}
export DATA=${DATA:-$DATAROOT/${job}.${pid}}
mkdir -p $DATA
cd $DATA

export cyc=${cyc:-00}
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}


####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# RERUN    - Rerun fcst from beginning (default no)
# VERBOSE  - Specify Verbose Output in exglobal_fcst_nems.sh.ecf
####################################
export SAVEGES=${SAVEGES:-YES}
export RERUN=${RERUN:-NO}
export VERBOSE=${VERBOSE:-YES}

####################################
# Specify Execution Areas
####################################
export HOMEgfs=${HOMEgfs:-$NWROOT/gfs.${gfs_ver}}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export HOMEglobal=${HOMEglobal:-$NWROOT/global_shared.${global_shared_ver}}
export EXECgsm=${EXECgsm:-$HOMEglobal/exec}
export SCRgsm=${SCRgsm:-$HOMEglobal/scripts}
export FIXgsm=${FIXgsm:-$HOMEglobal/fix/fix_am}
export USHgsm=${USHgsm:-$HOMEglobal/ush}
export PARMgsm=${PARMgsm:-$HOMEglobal/parm}

export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-$COMROOT/${NET}/${envir}}
export COM_OUT=${COM_OUT:-$COMROOT/${NET}/${envir}}
export COMIN=${COM_IN}/${RUN}.${PDY}
export COMOUT=${COM_OUT}/${RUN}.${PDY}

mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
gespath=${gespath:-$GESROOT/${envir}}
export GESdir=${GESdir:-$gespath/${RUN}.${PDY}}
mkdir -m 775 -p $GESdir

####################################
# Specify Special Fcst Vars
####################################
. ${PARM_GFSFCST_HIGH:-$PARMgfs/gfs_forecast_high.parm}

#
# Output File Names
#
export SIGO=${SIGO:-$COMOUT/$RUN.$cycle.atmf'${FH3}'.nemsio}
export SFCO=${SFCO:-$COMOUT/$RUN.$cycle.sfcf'${FH3}'.nemsio}
export FLXO=${FLXO:-$COMOUT/$RUN.$cycle.flxf'${FH3}'.nemsio}
export NSTO=${NSTO:-$COMOUT/$RUN.$cycle.nstf'${FH3}'.nemsio}
export G3DO=${G3DO:-$COMOUT/$RUN.$cycle.d3df'${FH3}'.nemsio}
export LOGO=${LOGO:-$COMOUT/$RUN.$cycle.logf'${FH3}'.nemsio}

#
# Restart File Names
#
export GRDR1=${GRDR1:-$GESdir/$RUN.$cycle.grdr1.t${JCAP}l${LEVS}}
export GRDR2=${GRDR2:-$GESdir/$RUN.$cycle.grdr2.t${JCAP}l${LEVS}}
export SIGR1=${SIGR1:-$GESdir/$RUN.$cycle.sigr1.t${JCAP}l${LEVS}}
export SIGR2=${SIGR2:-$GESdir/$RUN.$cycle.sigr2.t${JCAP}l${LEVS}}
export SFCR=${SFCR:-$GESdir/$RUN.$cycle.sfcr.t${JCAP}l${LEVS}}
export NSTR=${NSTR:-$GESdir/$RUN.$cycle.nstr.t${JCAP}l${LEVS}}

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

####################################
# Check if this is a restart
# Define Initialization File Names
####################################

export FHROT=0         # Forecast hour to Read One Time level
export FHOUT=3         # Forecast Hour Output Frequency
export FHMAX=240       # Forecast Length (Hours)
export FHOUT_HF=1                  # High Frequency Forecast Output Interval
export FHMAX_HF=${FHMAX_HF:-120}    # High Frequency Forecast Length (Hours)
fhm=48;   if [ ! -f $COMOUT/$RUN.$cycle.atmf$fhm.nemsio ]; then RERUN=YES ; fi

#-------------------------------
if [ $RERUN = NO ] ; then
#-------------------------------

 #start from restart files if they exist 
 SIZESIGR1=0; if [ -f $GRDR1 ]; then SIZESIGR1=$(stat -c %s $GRDR1) ;fi
 SIZESIGR2=0; if [ -f $GRDR2 ]; then SIZESIGR2=$(stat -c %s $GRDR2) ;fi
 SIZESFCR=0;  if [ -f $SFCR ];  then SIZESFCR=$(stat -c %s $SFCR) ;fi
 #...............................
 if [ $SIZESIGR1 -gt 100 -a $SIZESIGR2 -gt 100 -a $SIZESFCR -gt 100 ]; then
 #...............................
  cp $GRDR1 $DATA/grdr1
  cp $GRDR2 $DATA/grdr2
  cp $SIGR1 $DATA/sigr1
  cp $SIGR2 $DATA/sigr2
  cp $SFCR $DATA/sfcr
  cp $NSTR $DATA/nstr

  export GRDI=$DATA/grdr1
  export GRDI2=$DATA/grdr2
  export SIGI=$DATA/sigr1
  export SIGI2=$DATA/sigr2
  export SFCI=$DATA/sfcr
  export NSTI=$DATA/nstr

  msg="Forecast Starting with Restart files in $GESdir"
  postmsg "$jlogfile" "$msg"

 #...............................
 else   ##start from history files                    
 #...............................
  #first search for avaliable history files in com dir
  fhr=$FHMAX;   testfile=$COMOUT/$RUN.$cycle.atmf$fhr.nemsio
  while test ! -f $testfile -a $fhr -gt $fhm ;do
   fhr=`expr $fhr - $FHZER `
   testfile=$COMOUT/$RUN.$cycle.atmf$fhr.nemsio
  done

  export FHROT=`expr $fhr - $FHZER`
  GRDR1=$COMOUT/$RUN.$cycle.atmf$FHROT.nemsio
  SIGR1=$COMOUT/$RUN.$cycle.atmf$FHROT.nemsio
  SFCR=$COMOUT/$RUN.$cycle.sfcf$FHROT.nemsio
  NSTR=$COMOUT/$RUN.$cycle.nstf$FHROT.nemsio

  cp $GRDR1 $DATA/grdr1
  cp $SIGR1 $DATA/sigr1
  cp $SFCR $DATA/sfcr
  cp $NSTR $DATA/nstr

  export GRDI=$DATA/grdr1
  export SIGI=$DATA/sigr1
  export SIGI2=/dev/null   
  export SFCI=$DATA/sfcr
  export NSTI=$DATA/nstr

  if [ -f $GRDI -a -f $SIGI -a -f $SFCI -a $NSTI ] ; then
     msg="Forecast Starting with history files in $COMOUT"
     postmsg "$jlogfile" "$msg"
  else
     msg="History Files Not Available for $job; restart from analyses"
     postmsg "$jlogfile" "$msg"
     unset GRDI SIGI SIGI2 SFCI NSTI
     export RERUN=YES
  fi
 #...............................
 fi
 #...............................
#-------------------------------
fi
#-------------------------------

#-------------------------------
##start from analysis files 
if [ $RERUN = YES ] ; then
#-------------------------------
  export FHROT=0      # Forecast hour to Read One Time level
  export GRDI=${GRDI:-$GESdir/$RUN.t${cyc}z.atmanl.nemsio}
  export SIGI=${SIGI:-$GESdir/$RUN.t${cyc}z.atmanl.nemsio}
  export SFCI=${SFCI:-$GESdir/$RUN.t${cyc}z.sfcanl.nemsio}
  export NSTI=${NSTI:-$GESdir/$RUN.t${cyc}z.nstanl.nemsio}

  if [ -f $GRDI -a -f $SIGI -a -f $SFCI -a -f $NSTI ] ; then
     msg="Forecast Starting with Initial Guess Fields"
     postmsg "$jlogfile" "$msg"
  else
     msg="FATAL ERROR initial Guess Fields Not Available/Rerun $job"
     postmsg "$jlogfile" "$msg"
     export pgm=$job
     export err=911
     $ERRSCRIPT
  fi
#-------------------------------
fi
#-------------------------------

##############################################
# WCOSS_C environment settings
##############################################
export machine=${machine:-WCOSS_C}
export MKL_NUM_THREADS=1
export MKL_CBWR=AVX
export MP_MPILIB=mpich2
export USEBULKXFER=NO
export MPICH_GNI_COLL_OPT_OFF=MPI_Alltoallv
export IOBUF_PARAMS=${IOBUF_PARAMS:-'*:size=8M:verbose'}
export APRUN=${APRUN:-"aprun -j1 -n $ntasks -N $ptile -d $threads -cc depth"}


env

######################
# PDS Grid Designator
######################
export IGEN=81

#
# Execute the Forecast script
#

$LOGSCRIPT

FORECASTSH=${FORECASTSH:-$HOMEglobal/scripts/exglobal_fcst_nems.sh.ecf}
export FCSTEXEC=${FCSTEXEC:-${EXECgsm}/global_fcst} 
$FORECASTSH

# Determine whether or not to run 12-hour spin-up for low job
SPINUPLOW=${SPINUPLOW:-NO}

# for the chgres in the forecast low job
if [ $SPINUPLOW = YES ]; then
 spinstartfh=$((FHMAX-12))
 cp ${COMOUT}/$RUN.$cycle.atmf${spinstartfh}.nemsio $GESdir
 cp ${COMOUT}/$RUN.$cycle.sfcf${spinstartfh}.nemsio $GESdir
 cp ${COMOUT}/$RUN.$cycle.nstf${spinstartfh}.nemsio $GESdir
else
 cp ${COMOUT}/$RUN.$cycle.atmf${FHMAX} $GESdir
 cp ${COMOUT}/$RUN.$cycle.sfcf${FHMAX} $GESdir
 cp ${COMOUT}/$RUN.$cycle.nstf${FHMAX} $GESdir
fi

cp $GRDR1 $GESdir/$RUN.$cycle.grdr1.f$FHMAX
cp $GRDR2 $GESdir/$RUN.$cycle.grdr2.f$FHMAX
cp $SIGR1 $GESdir/$RUN.$cycle.sigr1.f$FHMAX
cp $SIGR2 $GESdir/$RUN.$cycle.sigr2.f$FHMAX
cp $SFCR $GESdir/$RUN.$cycle.sfcr.f$FHMAX
cp $NSTR $GESdir/$RUN.$cycle.nstr.f$FHMAX

#
cat $pgmout

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"
date

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT

if [ ${KEEPDATA:-NO} != YES ] ; then rm -rf $DATA ; fi

if [ $RUN_ENVIR != nco ] ; then
     PEND=${PEND:-""}
     export CSTEP=fcst1
    $PEND
fi
date
