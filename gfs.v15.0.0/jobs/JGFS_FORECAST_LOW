#!/bin/ksh 

set -xa

export RUN_ENVIR=${RUN_ENVIR:-nco}

if [ $RUN_ENVIR != nco ] ; then
  PBEG=${PBEG:-""}
  $PBEG
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/para_gfs/pr4devb/para_config}
  export userid=$LOGNAME
fi

export PS4='$SECONDS + '
date

# #### 02/02/2016 #############################
# SETUP GFS FCST PROCESSING VARIABLES
# #############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATAROOT=${DATAROOT:-/tmpnwprd1}
export DATA=${DATA:-$DATAROOT/${job}.${pid}}
mkdir -p $DATA
cd $DATA

export cyc=${cyc:-00}
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}


####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# RERUN    - Rerun fcst from beginning (default yes)
# VERBOSE  - Specify Verbose Output in exglobal_fcst_nems.sh.ecf
####################################
export RERUN=${RERUN:-YES}
export VERBOSE=${VERBOSE:-YES}

####################################
# Specify Execution Areas
####################################
export HOMEgfs=${HOMEgfs:-$NWROOT/gfs.${gfs_ver}}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export HOMEglobal=${HOMEglobal:-$NWROOT/global_shared.${global_shared_ver}}
export EXECgsm=${EXECgsm:-$HOMEglobal/exec}
export SCRgsm=${SCRgsm:-$HOMEglobal/scripts}
export FIXgsm=${FIXgsm:-$HOMEglobal/fix/fix_am}
export USHgsm=${USHgsm:-$HOMEglobal/ush}
export PARMgsm=${PARMgsm:-$HOMEglobal/parm}

export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-$COMROOT/${NET}/${envir}}
export COM_OUT=${COM_OUT:-$COMROOT/${NET}/${envir}}
export COMIN=${COM_IN}/${RUN}.${PDY}
export COMOUT=${COM_OUT}/${RUN}.${PDY}

mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
gespath=${gespath:-$GESROOT/${envir}}
export GESdir=${GESdir:-$gespath/${RUN}.${PDY}}
mkdir -m 775 -p $GESdir

##############################################
# WCOSS_C environment settings
##############################################
export machine=${machine:-WCOSS_C}
export MKL_NUM_THREADS=1
export MKL_CBWR=AVX
export MP_MPILIB=mpich2
export USEBULKXFER=NO
export MPICH_GNI_COLL_OPT_OFF=MPI_Alltoallv
export IOBUF_PARAMS=${IOBUF_PARAMS:-'*:size=8M:verbose'}
export APRUN=${APRUN:-"aprun -j1 -n $ntasks -N $ptile -d $threads -cc depth"}
export APRUNC=${APRUNC:-"aprun -n 1 -N 1 -j 1 -d 24 -cc depth"}


####################################
# Specify Special Fcst Vars
####################################
. ${PARM_GFSFCST_LOW:-$PARMgfs/gfs_forecast_low.parm}
 
#
# Restart File Names
#
export GRDR1=${GRDR1:-$GESdir/$RUN.$cycle.grdr1.t${JCAP}l${LEVS}}
export GRDR2=${GRDR2:-$GESdir/$RUN.$cycle.grdr2.t${JCAP}l${LEVS}}
export SIGR1=${SIGR1:-$GESdir/$RUN.$cycle.sigr1.t${JCAP}l${LEVS}}
export SIGR2=${SIGR2:-$GESdir/$RUN.$cycle.sigr2.t${JCAP}l${LEVS}}
export SFCR=${SFCR:-$GESdir/$RUN.$cycle.sfcr.t${JCAP}l${LEVS}}
export NSTR=${NSTR:-$GESdir/$RUN.$cycle.nstr.t${JCAP}l${LEVS}}

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"


# Variables for High Frequency Output
export FHOUT_HF=1      # High Frequency Forecast Output Interval
export FHMAX_HF=0      # High Frequency Forecast Length (Hours)

FORECASTSH=${FORECASTSH:-$HOMEglobal/scripts/exglobal_fcst_nems.sh.ecf}
export FCSTEXEC=${FCSTEXEC:-${EXECgsm}/global_fcst}

# Determine whether or not to run 12-hour spin-up for low job
SPINUPLOW=${SPINUPLOW:-NO}

############################################################
# Check if this is a restart, define restart files, run forecast
############################################################

#-----------------------------------
if [ -f $GRDR1 -a -f $SIGR1 -a -f $SIGR2 -a -f $SFCR -a -f $NSTR -a $RERUN = NO ] ; then
#-----------------------------------
  cp $GRDR1 $DATA/grdr1
  cp $GRDR2 $DATA/grdr2
  cp $SIGR1 $DATA/sigr1
  cp $SIGR2 $DATA/sigr2
  cp $SFCR $DATA/sfcr
  cp $NSTR $DATA/nstr

  export GRDI=$GRDR1
  export GRDI2=$GRDR2
  export SIGI=$SIGR1
  export SIGI2=$SIGR2
  export SFCI=$SFCR
  export NSTI=$NSTR

  if [ -f $GRDI -a -f $GRDI2 -a -f $SIGI -a -f SIGI2 -a -f $SFCI -a -f $NSTI ] ; then
     msg="Forecast Starting With Restart Files in $GESdir"
     postmsg "$jlogfile" "$msg"
  else
     msg="FATAL ERROR Restart Files Not Avaliable for $job"
     postmsg "$jlogfile" "$msg"
     export pgm=$job
     export err=911
     $ERRSCRIPT
  fi

#-----------------------------------
else
#-----------------------------------
#
# Forecast Start Hour
#
  if [ $SPINUPLOW = YES ]; then
   export FHINI=228
  else
   export FHINI=240
  fi

  export SIGINP=$GESdir/$RUN.$cycle.atmf$FHINI.nemsio
  export SFCINP=$GESdir/$RUN.$cycle.sfcf$FHINI.nemsio
  export NSTINP=$GESdir/$RUN.$cycle.nstf$FHINI.nemsio
  export GFSOUT=$DATA/$RUN.$cycle.grdr.chgres
  export SFNOUT=$DATA/$RUN.$cycle.sfcr.chgres
  export NSNOUT=$DATA/$RUN.$cycle.nstr.chgres

# Set SIGLEVEL according to vertical coordinate type in $SIGINP
  if [ $NEMSIO_IN = .true. ]; then
     export IDVC=${IDVC:-$($nemsioget ${SIGINP} IDVC |grep -i "IDVC" |awk -F"= " '{print $2}' |awk -F" " '{print $1}')}
  else
     export SIGHDR=$EXECgsm/global_sighdr
     export IDVC=$(echo idvc|$SIGHDR ${SIGINP})
  fi
  if [ $IDVC = 1 ] ; then
     export SIGLEVEL=$FIXgsm/global_siglevel.l$LEVS.txt
  elif [ $IDVC = 2 ] ; then
     export SIGLEVEL=$FIXgsm/global_hyblev.l$LEVS.txt
  fi

# Run global_chgres
  export CHGRESVARS="use_ufo=$use_ufo,nst_anl=$NST_ANL,rdgrid=$rdgrid,idvc=$IDVC,idvt=$idvt,idsl=$IDSL,IDVM=$idvm,OUTTYP=$OUTTYP_CH,nopdpvv=$nopdpvv"
  export OMP_NUM_THREADS_CH=${OMP_NUM_THREADS_CH:-24}
  ${CHGRESSH:-$HOMEglobal/ush/global_chgres.sh}
  rc=$?
  if [[ $rc -ne 0 ]];then $PERR;exit 1;fi
  cat $pgmout

  export GRDI=$GFSOUT
  export SFCI=$SFNOUT
  export NSTI=$NSNOUT

  if [ -f $GRDI -a -f $SFCI -a -f $NSTI ] ; then
     msg="Forecast Starting with Fields Produced by CHGRES"
     postmsg "$jlogfile" "$msg"
  else
     msg="FATAL ERROR fields Produced by CHGRES Not Available for $job"
     postmsg "$jlogfile" "$msg"
     export pgm=$job
     export err=911
     $ERRSCRIPT
  fi

#.............................
if [ $SPINUPLOW = YES ]; then
#.............................
 #Start Spin Lower Res Up Section the GFS Forecast 228-240 Hours
  export FHROT=$FHINI    # Forecast hour to Read One Time level
  export FHOUT=12        # Forecast Hour Output Frequency
  export FHMAX=240       # Forecast Length (Hours)
  export FHRES=12        # Forecast Hour Restart Frequency
  export FHZER=12        # Interval to Zero out precip field,etc. Should not be less that FHOUT
  export FHDFI=3         # Half number of hours of digital filter initialization
  export FHCYC=24        # Surface cycling boundary condition update frequency in hours

#
# Output File Names (Don't Save the Forecast Output/Just need the restart)
#
  export GRDO=/dev/null
  export SIGO=/dev/null
  export SFCO=/dev/null
  export FLXO=/dev/null
  export NSTO=/dev/null
  export LOGO=/dev/null
#
# Execute the Forecast script
#
  $FORECASTSH
#.............................
fi   ;#end of spinup
#.............................
#-----------------------------------
fi
#-----------------------------------

############################################################
# Start Section 2 of the GFS Forecast 240-384 Hours
############################################################
if [ $SPINUPLOW = YES -o $RERUN = NO ]; then
 export FHROT=0         # Forecast hour to Read One Time level
 export FHDFI=0         # Half number of hours of digital filter initialization
else
 export FHROT=$FHINI    # Forecast hour to Read One Time level
 export FHDFI=3         # Half number of hours of digital filter initialization
fi
export FHOUT=12        # Forecast Hour Output Frequency
export FHMAX=384       # Forecast Length (Hours)
export FHRES=480       # Forecast Hour Restart Frequency (408- turned off restart)
export FHZER=12        # Interval to Zero out precip field,etc. Should not be less that FHOUT
export FHCYC=24        # Surface cycling boundary condition update frequency in hours
#
unset FHINI

#
# Output File Names
#
export SIGO=${SIGO:-$COMOUT/$RUN.$cycle.atmf'${FH3}'.nemsio}
export SFCO=${SFCO:-$COMOUT/$RUN.$cycle.sfcf'${FH3}'.nemsio}
export FLXO=${FLXO:-$COMOUT/$RUN.$cycle.flxf'${FH3}'.nemsio}
export NSTO=${NSTO:-$COMOUT/$RUN.$cycle.nstf'${FH3}'.nemsio}
export G3DO=${G3DO:-$COMOUT/$RUN.$cycle.d3df'${FH3}'.nemsio}
export LOGO=${LOGO:-$COMOUT/$RUN.$cycle.logf'${FH3}'.nemsio}


if [ $SPINUPLOW = YES ]; then
 cp $GRDR1 $DATA/grdr1
 cp $GRDR2 $DATA/grdr2
 cp $SIGR1 $DATA/sigr1
 cp $SIGR2 $DATA/sigr2
 cp $SFCR $DATA/sfcr
 cp $NSTR $DATA/nstr
 export GRDI=$DATA/grdr1
 export GRDI2=$DATA/grdr2
 export SIGI=$DATA/sigr1
 export SIGI2=$DATA/sigr2
 export SFCI=$DATA/sfcr
 export NSTI=$DATA/nstr
else
 export GRDI=$DATA/$RUN.$cycle.grdr.chgres
 export GRDI2=/dev/null
 export SIGI=$DATA/$RUN.$cycle.sigr.chgres
 export SIGI2=/dev/null   
 export SFCI=$DATA/$RUN.$cycle.sfcr.chgres
 export NSTI=$DATA/$RUN.$cycle.nstr.chgres
fi

env

#
# PDS Grid Designator
#
  export IGEN=81

#
# Execute the Forecast script
#
$FORECASTSH

cat $pgmout

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT

if [ ${KEEPDATA:-NO} != YES ] ; then rm -rf $DATA ; fi

if [ $RUN_ENVIR != nco ] ; then
     PEND=${PEND:-""}
     export CSTEP=fcst1
    $PEND
fi
date
