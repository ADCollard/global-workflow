#!/bin/sh

# LSBATCH: User input
#BSUB -J jgfs_pgrb2_spec_post_00
#BSUB -o /gpfs/hps/ptmp/Boi.Vuong/output/gfs_pgrb2_spec_post_00.o%J
#BSUB -e /gpfs/hps/ptmp/Boi.Vuong/output/gfs_pgrb2_spec_post_00.o%J
#BSUB -L /bin/sh
#BSUB -q "dev_shared"
#BSUB -cwd /gpfs/hps/ptmp/Boi.Vuong/output
#BSUB -W 00:30
#BSUB -P GFS-T2O
#BSUB -R rusage[mem=1000]

export OMP_NUM_THREADS=1
export KMP_AFFINITY=disabled
export OMP_STACKSIZE=1024m
export MP_LABELIO=yes
export MP_STDOUTMODE=ordered

export PDY=20160914
export PDY1=`expr $PDY - 1`

# export cyc=06
export cyc=00
export cycle=t${cyc}z

set -xa
export PS4='$SECONDS + '
date

####################################
##  Load the GRIB Utilities module
#####################################

#%include <head.h>
#%include <envir-p2.h>

. $MODULESHOME/init/sh
module load PrgEnv-intel/5.2.56
module load cfp-intel-sandybridge/1.1.0
module load ESMF-intel-sandybridge/3_1_0rp5
module load iobuf/2.0.7
module load craype-hugepages2M
module load craype-haswell
module load prod_envir
module load prod_util/1.0.4
#
#   This is a test version of GRIB_UTIL.v1.0.4 on CRAY
#
module unload grib_util/1.0.3
module use /gpfs/hps/nco/ops/nwtest/modulefiles
module load grib_util/1.0.4

module list

export OMP_NUM_THREADS=${OMP_NUM_THREADS:-1}

############################################
# GFS PGRB2_SPECIAL_POST PRODUCT GENERATION
############################################

##############################################
# Define COM, PCOM, COMIN  directories
##############################################

# set envir=prod or para to test with data in prod or para
export envir=para
#  export envir=prod

export SENDDBN=NO
export job=gfs_pgrb2_spec_post_${cyc}
export pid=${pid:-$$}
export jobid=${job}.${pid}
export DATAROOT=/gpfs/hps/ptmp/Boi.Vuong/output
export NWROOT=/gpfs/hps/emc/global/noscrub/Boi.Vuong/svn
export COMROOT2=/gpfs/hps/ptmp/Boi.Vuong/com
export PCOMROOT2=/gpfs/hps/ptmp/Boi.Vuong/pcom/${envir}

mkdir -m 775 -p ${COMROOT2} ${COMROOT2}/logs ${COMROOT2}/logs/jlogfiles $PCOMROOT2
export jlogfile=${COMROOT2}/logs/jlogfiles/jlogfile.${jobid}

#############################################################
# Specify versions
#############################################################
export gdas_ver=v14.1.0
export gfs_ver=v14.1.0
export util_ver=v1.0.4

##########################################################
# obtain unique process id (pid) and make temp directory
##########################################################
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p $DATA
cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=${cycle:-t${cyc}z}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
# KEEPDATA=NO--Remove temporary working
############################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

################################
# Set up the HOME directory
################################
export HOMEgfs=${HOMEgfs:-${NWROOT}/gfs.${gfs_ver}}
export USHgfs=${USHgfs:-$HOMEgfs/ush}
export EXECgfs=${EXECgfs:-$HOMEgfs/exec}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export FIXgfs=${FIXgfs:-$HOMEgfs/fix}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}
export model=${model:-gfs}

##############################################
# Define COM directories
##############################################
# export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}
# export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}
# export PCOM=${PCOM:-${PCOMROOT}/${NET}}

if [ $envir = "prod" ] ; then
#  This setting is for testing with GFS (production)
  export COMIN=${COMROOTp2}/gfs/prod/gfs.${PDY}
else
#  export COMIN=/gpfs/hps/ptmp/emc.glopara/com2/gfs/para/gfs.${PDY}         ### EMC PARA Realtime
  export COMIN=/gpfs/hps/emc/global/noscrub/Boi.Vuong/para_gfs_${PDY}       ### test with canned data
fi

export COMOUT=${COMOUT:-${COMROOT2}/${NET}/${envir}/${RUN}.${PDY}}
export PCOM=${PCOM:-${PCOMROOT2}/${NET}}

if [ $SENDCOM = YES ] ; then
  mkdir -m 775 -p $COMOUT $PCOM
fi

export pgmout=OUTPUT.$$

env

####################################
# Specify Forecast Hour Range
####################################
export SHOUR=00
export FHOUR=180
export FHINC=03

#######################################
# Specify Restart File Name to Key Off
#######################################
restart_file=$COMIN/${RUN}.t${cyc}z.special.grb2if

####################################
# Specify Timeout Behavior of Post
#
# SLEEP_TIME - Amount of time to wait for
#              a restart file before exiting
# SLEEP_INT  - Amount of time to wait between
#              checking for restart files
####################################
export SLEEP_TIME=900
export SLEEP_INT=5

####################################
# Check if this is a restart
####################################
if test -f $COMIN/$RUN.t${cyc}z.control.goessimpgrb2
then
   modelrecvy=`cat < $COMIN/$RUN.t${cyc}z.control.goessimpgrb2`
   recvy_pdy=`echo $modelrecvy | cut -c1-8`
   recvy_cyc=`echo $modelrecvy | cut -c9-10`
   recvy_shour=`echo $modelrecvy | cut -c11-13`

   if test $RERUN = "NO"
   then
      NEW_SHOUR=`expr $recvy_shour + $FHINC`
      if test $NEW_SHOUR -ge $SHOUR
      then
         export SHOUR=$NEW_SHOUR
      fi
      if test $recvy_shour -ge $FHOUR
      then
         msg="Forecast Pgrb Generation Already Completed to $FHOUR"
         postmsg "$jlogfile" "$msg"
      else
         msg="Starting: PDY=$PDY cycle=t${recvy_cyc}z SHOUR=$SHOUR      ."
         postmsg "$jlogfile" "$msg"
      fi
   fi
fi

#############################################################
# Execute the script
$HOMEgfs/scripts/exglobal_grib2_special.sh.ecf
export err=$?;err_chk
#############################################################

msg="JOB $job HAS COMPLETED NORMALLY!"
postmsg $jlogfile "$msg"

############################################
# print exec I/O output
############################################
if [ -e "$pgmout" ] ; then
  cat $pgmout
fi

###################################
# Remove temp directories
###################################
if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date
