#!/bin/ksh
set -x

#--------------------------------------------
#--------------------------------------------
# Configuration file for running NEMS FV3GFS 
#--------------------------------------------
#--------------------------------------------
mac=`hostname |cut -c1`

machine=WCOSS_C
NEMS=YES

PSLOT=test                   # Experiment ID
EDATE=2017071600            # Analysis/forecast cycle ending date 
EDUMP=gdas                  # cycle ending dump
ESTEP=prep                  # cycle ending step

if [ $machine = WCOSS ]; then
 EXPDIR=/global/save/$LOGNAME/para_gfs/pr$PSLOT
elif [ $machine = WCOSS_C ]; then
 EXPDIR=/gpfs/hps/emc/global/noscrub/$LOGNAME/para_gfs/pr$PSLOT
elif [ $machine = THEIA ]; then
 EXPDIR=/scratch4/NCEPDEV/global/save/$LOGNAME/NEMS/pr$PSLOT
fi
RLIST=$EXPDIR/pr${PSLOT}.gsi.rlist

# ----------------------------------
# options for NEMSIO
# ----------------------------------
use_gfs_nemsio=.true.
NEMSIO_IN=.true.
NEMSIO_OUT=.true.
OUTTYP_F=1                   #NEMSIO

SIGISUF='gfnanl'
SFCISUF='sfnanl'
NSTISUF='nsnanl'
FLXISUF='flnanl'
SIGOSUF='gfn'
SFCOSUF='sfn'
NSTOSUF='nsn'
FLXOSUF='fln'

# ----------------------------------
# user account 
# ----------------------------------
if [ $machine = WCOSS ]; then
 . /usrx/local/Modules/3.2.10/init/ksh
 module unload ics/12.1
 module load ics/15.0.3
 CUE2RUN=devhigh2
 CUE2RUN1=devhigh2
 CUE2RUNA=transfer
 RUN_ENVIR=para
 ACCOUNT=FV3GFS-T2O
 group_name=rstprod
 GROUP=dev
 max_core=24
 pe_node=24
 memory_node=3072

elif [ $machine = WCOSS_C ]; then
 . $MODULESHOME/init/sh  2>>/dev/null
 module load PrgEnv-intel cray-mpich crtm-intel/2.2.4 cfp-intel-sandybridge 2>>/dev/null
 module load prod_envir prod_util grib_util/1.0.3 hpss g2tmpl-intel/1.4.0 2>>/dev/null
 CUE2RUN=dev
 CUE2RUN1=dev
 CUE2RUNA=dev_transfer
 RUN_ENVIR=para
 ACCOUNT=FV3GFS-T2O
 group_name=rstprod
 GROUP=dev
 max_core=24
 pe_node=24
 memory_node=3072

elif [ $machine = THEIA ]; then
 CUE2RUN=batch
 CUE2RUN1=batch
 CUE2RUNA=service
 RUN_ENVIR=para
 ACCOUNT=FV3GFS-T2O
 group_name=global
 GROUP=global
 max_core=24
 pe_node=24
 memory_node=3072

 OMP_STACKSIZE=500M
 MPI_BUFS_PER_HOST=1024
 MPI_BUFS_PER_PROC=1024
 if [ $CSTEP = fcst1 -o $CSTEP = fcst2 -o $CSTEP = anal ]; then
  MPICH_FAST_MEMCPY="ENABLE"
  MPICH_MAX_SHORT_MSG_SIZE=4096
  MPICH_PTL_OTHER_EVENTS=100000
  MPICH_PTL_UNEX_EVENTS=400000
  MPI_BUFS_PER_HOST=2048
  MPI_BUFS_PER_PROC=2048
  KMP_STACKSIZE=2048m
  LAPI_DEBUG_SLOT_ATT_THRESH=5000000
  MP_STDOUTMODE=ordered
 fi
fi

# -----------------------------------------------
# directories: source scripts, running space etc
# -----------------------------------------------
CHKNXTJOB=NO
if [ $machine = WCOSS ]; then
 TOPDIR=/global                                       # DO NOT CHANGE
 DISK_GLOB=$TOPDIR/save              
 NOSCRUB=/global/noscrub
 STMP=/stmpd3
 PTMP=/ptmpd3
 DMPDIR=/globaldump
 if [ $CDATE -lt 2014120100 ] ; then
    DMPDIR=/globaldump2
 else
    DMPDIR=/globaldump
 fi
 NWPROD=/nwprod
 NWPARA=/global/save/emc.glopara/nwpara
 PERTURBDIR=$NWPROD/fix/enkf_gfs
 BASE_SVN=/global/save/$LOGNAME/svn
 tags=trunk_r86472
 nemsioget=/global/save/emc.glopara/bin/nemsio_get
 archsyndir=/com/arch/prod/syndat
elif [ $machine = WCOSS_C ]; then
 TOPDIR=/gpfs/hps/emc/global                                       # DO NOT CHANGE
 DISK_GLOB=$TOPDIR/noscrub              
 NOSCRUB=/gpfs/hps/emc/global/noscrub
 STMP=/gpfs/hps/stmp
 PTMP=/gpfs/hps/ptmp
 DMPROOT=`echo $NWROOTp1 | cut -d"/" -f1-3`
 DMPDIR=$DMPROOT/emc/globaldump
 NWPROD=/gpfs/hps/nco/ops/nwprod
 NWPARA=/gpfs/hps/emc/global/save/emc.glopara/nwpara
 PERTURBDIR=$NWPROD/fix/enkf_gfs
 BASE_SVN=/gpfs/hps/emc/global/noscrub/$LOGNAME/svn
 tags=trunk_r86472
 nemsioget=/gpfs/hps/emc/global/noscrub/emc.glopara/bin/nemsio_get
 archsyndir=$COMROOTp1/arch/prod/syndat
elif [ $machine = THEIA ]; then
 TOPDIR=/scratch4/NCEPDEV/global
 DISK_GLOB=$TOPDIR/save              
 NOSCRUB=/scratch4/NCEPDEV/global/noscrub
 BASE_SVN=/scratch4/NCEPDEV/global/save/glopara/svn
 STMP=/scratch4/NCEPDEV/stmp3
 PTMP=/scratch4/NCEPDEV/stmp4
 DMPDIR=/scratch4/NCEPDEV/global/noscrub/dump
 NWPROD=/scratch4/NCEPDEV/global/save/glopara/nwpara
 NWPARA=$NWPROD
 PERTURBDIR=$TOPDIR/noscrub/glopara/enkf/data254_specps
 archsyndir=/scratch4/NCEPDEV/rstprod/com/arch/prod/syndat
 utilscript=/scratch4/NCEPDEV/rstprod/nwprod/util/ush
 pe_node=24
 nemsioget=/home/glopara/bin/nemsio_util/nemsio_get
 tags=trunk_r86472
else
 echo '$machine is not supported, exit'
 exit
fi

ROTDIR=$PTMP/$LOGNAME/pr${PSLOT} 
TOPDRG=$TOPDIR          
TOPDRC=$TOPDIR         
TOPDRA=$TOPDIR        
COMDIR=$TOPDIR                        
COMROT=$ROTDIR
DAYDIR=$COMROT
COMDAY=$COMROT
 
# ------------------- 
# COMPONENT SETTINGS 
# ------------------- 
# Version
workflow_ver=v15.0.0
gdas_ver=v15.0.0
gfs_ver=v15.0.0
global_shared_ver=v15.0.0
crtm_ver=v2.2.4
obsproc_prep_ver=v3.5.0
obsproc_prep_post_ver=v2.1.0
obsproc_global_ver=v2.1.1
verif_ver=v20
radmon_ver=2.0.2a
minmon_ver=1.0.0

# Location
BASEDIR=$BASE_SVN/fv3gfs/$tags/gfs_workflow.$workflow_ver/para
BASE_BUFRSND=$BASE_SVN/fv3gfs/$tags/gfs.$gfs_ver
BASE_ENKF=$BASE_SVN/fv3gfs/$tags/gdas.$gdas_ver
BASE_EMCSFC=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
BASE_GSM=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
BASE_GSI=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
BASE_TROPCY=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
#BASE_POST=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
BASE_POST=$BASE_SVN/fv3gfs/post

#BASE_PREP_POST=$BASE_SVN/obsproc/releases/obsproc_prep_post.$obsproc_prep_post_ver
BASE_PREP_POST=$BASE_SVN/fv3gfs/obsproc_prep_post.$obsproc_prep_post_ver
#BASE_PREP=$BASE_SVN/obsproc/releases/obsproc_prep.$obsproc_prep_ver
BASE_PREP=$BASE_SVN/fv3gfs/obsproc_prep_RB-3.5.0 

#BASE_PREP_GLOBAL=$BASE_SVN/obsproc/releases/obsproc_global.$obsproc_global_ver
BASE_PREP_GLOBAL=$BASE_SVN/fv3gfs/obsproc_global.$obsproc_global_ver
BASE_VERIF=$BASE_SVN/verif
if [ $machine = WCOSS_C ]; then
 BASE_MINMON=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
 BASE_RADMON=$BASE_SVN/fv3gfs/$tags/global_shared.$global_shared_ver
else
 BASE_MINMON=$BASE_SVN/verif/global/tags/Minimization_Monitor_${minmon_ver}
 BASE_RADMON=$BASE_SVN/verif/global/tags/Radiance_Monitor-${radmon_ver}
fi
BASE_OZNMON=$BASE_SVN/gsi/REL-5.0.0
BASE_NEMS=$BASE_SVN/fv3gfs/NEMS/trunk_77848/NEMS

PENDDIR=$PTMP 
FIXSYND=$BASE_PREP/fix
HOMEALL=$NWPROD
SHDIR=$BASEDIR/bin
JOBSDIR=$BASEDIR/jobs
USHDIR=$BASEDIR/ush
USHENKF=$BASE_ENKF/ush
USHgdas=$BASE_ENKF/ush
SCRDIR=$BASE_GSM/scripts
SCRDIR_GSI=$BASE_GSI/scripts
SCRDIR_ENKF=$BASE_ENKF/scripts
EXECDIR=$BASEDIR/exec
SIGHDR=$nemsioget
SFCHDR=$nemsioget

ARCDIR=$NOSCRUB/$LOGNAME/archive/pr$PSLOT
FIT_DIR=$ARCDIR/fits                                    # Directory for SAVEFITS output
HORZ_DIR=$ARCDIR/horiz                                  # Directory for SAVEFITS output
DATATMP='$STMP/$LOGNAME/$PSLOT$CDATE$CDUMP$CSTEP'
eval TMPDIR=$DATATMP
KEEPDATA=NO

# ---------------------------
# utilities and misc options
# ----------------------------
NDATE=${NDATE:-$NWPROD/util/exec/ndate}
NHOUR=${NHOUR:-$NWPROD/util/exec/nhour}
WGRIB=${WGRIB:-$NWPROD/util/exec/wgrib}
WGRIB2=${WGRIB2:-$NWPROD/util/exec/wgrib2}
COPYGB=${COPYGB:-$NWPROD/util/exec/copygb}
COPYGB2=${COPYGB2:-$NWPROD/util/exec/copygb2}
BFCOMB=$EXECDIR/bufr_combfr
GRBINDEX=${GRBINDEX:-/nwprod2/grib_util.v1.0.1/exec/grbindex}
GRB2INDEX=${GRB2INDEX:-/nwprod2/grib_util.v1.0.1/exec/grb2index}
GRBINDEX2=$GRB2INDEX
windex=$GRBINDEX

cycn=`echo $CDATE | cut -c9-10`
month=`echo $CDATE |cut -c5-6`
PMKR=$BASEDIR/bin/pmkr
NCP="/bin/cp -p"
INHERIT_ENV=NO

if [ $machine = WCOSS ]; then
 HPSSTAR=/nwprod/util/ush/hpsstar
 HTAR=/usrx/local/hpss/htar
 HSI=/usrx/local/hpss/hsi
 SUB=$BASEDIR/bin/sub_wcoss
 PSUB=$BASEDIR/bin/psub
 PEND=$BASEDIR/bin/pend
elif [ $machine = WCOSS_C ]; then
 HPSSTAR=/u/emc.glopara/bin/hpsstar
 HTAR=/usrx/local/prod/hpss/htar
 HSI=/usrx/local/prod/hpss/hsi
 SUB=$BASEDIR/bin/sub_wcoss_c
 PSUB=$BASEDIR/bin/psub
 PEND=$BASEDIR/bin/pend
elif [ $machine = THEIA ]; then
 HPSSTAR=$USHDIR/hpsstar
 HTAR=/apps/hpss/htar
 HSI=/apps/hpss/hsi
 SUB=$BASEDIR/bin/sub_theia
 PSUB=$BASEDIR/bin/psub
 PEND=$BASEDIR/bin/pend_theia
fi

VERBOSE=YES                       
RESUBMIT=NO                         # resubmit a failed job - Defaults to NO
DODUMP=NO
RUNLOG=$EXPDIR/pr${PSLOT}.runlog
NEW_DAYFILE=YES                     # To create new dayfile for every rerun
step1=`echo $CSTEP | cut -c1-4`
step2=`echo $CSTEP | cut -c5-5`
nknd=${CKND:-${nknd:-1}}

# -------------------------------------------------------------
#  settings that are used by more than one steps
# -------------------------------------------------------------
gfs_cyc=1                          # GFS cycles (00, 06, 12 and 18Z), defaults to 1 (00Z) cycle
gdas_cyc=4                         # number of GDAS cycles
fseg=1                             # number of AM forecast segments for gfs 
FHCYC=24                             # Surface cycle calling interval
 
LEVS=64                            # number of AM levels
CASE1=C192                         # 1st segment resolution (0-240 hr)
CASE2=C192                         # 2nd segment resolution (240-384 hr)
CASE_ENKF=C382                     # ENKF resolution 
CASE=$(eval echo \${CASE$nknd})
if [ $CSTEP = efmn -o $CSTEP = epos ]; then CASE=$CASE_ENKF; fi

case $CASE in
  C48)   DELTIM=3600; layout_x=4  ; layout_y=8  ;;
  C96)   DELTIM=1800; layout_x=4  ; layout_y=8  ;;
  C192)  DELTIM=900 ; layout_x=4  ; layout_y=8  ;;
  C384)  DELTIM=450 ; layout_x=4  ; layout_y=8  ;;
  C768)  DELTIM=225 ; layout_x=8  ; layout_y=16 ;;
  C1152) DELTIM=150 ; layout_x=8  ; layout_y=16 ;;
  C3072) DELTIM=90  ; layout_x=16 ; layout_y=32 ;;
  *)     echo "grid $CASE not supported, exit"
         exit ;;
esac


fmax1=240; fmax2=384
for cyc in 00 06 12 18; do
 eval FHMAXFCST${cyc}GFS1=$fmax1             # maximum forecast hour for 1st segment
 eval FHMAXFCST${cyc}GFS2=$fmax2             # maximum forecast hour for 2st segment
 eval FHMAXFCST${cyc}GDAS=9                  # maximum forecast hour for GDAS          
 eval FHOUTFCST${cyc}GFS1=6  
 eval FHOUTFCST${cyc}GFS2=12  
 eval FHOUTFCST${cyc}GDAS=1  
 eval FHZERFCST${cyc}GFS1=6  
 eval FHZERFCST${cyc}GFS2=12  
 eval FHZERFCST${cyc}GDAs=6  
 eval MFCST${cyc}GFS=$fseg                   #number of GFS forecast segmants
 eval MFCST${cyc}GDAS=1                      #number of GDAS forecast segments
done
cdump=$(echo $CDUMP|tr '[a-z]' '[A-Z]')
FHMAX=$(eval echo \${FHMAXFCST$cycn$cdump$nknd})
FHOUT=$(eval echo \${FHOUTFCST$cycn$cdump$nknd})
FHZER=$(eval echo \${FHZERFCST$cycn$cdump$nknd})


#---if fdiag is given, it overwrites FHOUT
fh00=$(echo $DELTIM 3600|awk '{printf "%f", $1/$2}')
fdiag="$fh00,6.,12.,18.,24.,30.,36.,42.,48.,54.,60.,66.,72.,78.,84.,90.,96.,102.,108.,114.,120.,126.,132.,138.,144.,150.,156.,162.,168.,174.,180.,186.,192.,198.,204.,210.,216.,222.,228.,234.,240."
NFCST=$(echo $fdiag |awk -F '[\t,]' '{print NF}')   ;#number of forecast output



REMAP_GRID=latlon        #gaussian or latlon for using fregrid or regrid_nemsio for remapping 
CCPOST=NO                # To run concurrent post
ARCHIVE=YES              # make online archive

#  ----------------------------------
#  dump info used by multiple steps
#  ----------------------------------
COMDMP='$DMPDIR/$CDATE/${CDUMP}'
COMCOP='$DMPDIR/$CDATE/${CDUMP}'


#----------------------------------------------------------
mkdir -p $COMROT
mkdir -p $COMDAY
mkdir -p $ARCDIR
mkdir -p $ARCDIR
mkdir -p $FIT_DIR
mkdir -p $HORZ_DIR
permission=755
chgrp rstprod $ARCDIR
chgrp rstprod $FIT_DIR
chgrp rstprod $HORZ_DIR
chmod $permission $COMROT
chmod $permission $COMDAY
chmod $permission $ARCDIR
chmod $permission $FIT_DIR
chmod $permission $HORZ_DIR

