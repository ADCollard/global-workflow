TRACKERSH=$BASE_TROPCY/ush/global_tracker.sh
PARATRKR=$BASE_TROPCY/ush/global_extrkr.sh
GETTRKEXEC=$BASE_TROPCY/exec/gettrk
GETTX=$GETTRKEXEC
SUPVX=$BASE_TROPCY/exec/supvit
RELOTRKRSH=$BASE_TROPCY/ush/tropcy_relocate_extrkr.sh

if [ $gfs_cyc -gt 0 ] ; then
 fdump=gfs                         # verifying forecasts from GFS analysis
else
 fdump=gdas                        # verifying forecasts from GDAS analysis
fi
VDUMP=gfs                          # verifying dump
CDUMPFCST=gdas                     # fits-to-obs against gdas or gfs prep
CDFNL=gdas                         # SCORES verification against pgbanl.gdas or pgbanl.gfs

DO_NHCSUBSET=NO
if [ $machine = WCOSS_C ]; then
 NHCOUTPUT=$ARCDIR/nhc_subset
 NHCSUBSETSH=$USHDIR/extract_grib2_nhc_retro.sh
 NHCSUBSET_PGB=pgrbq
 PGB_FORMAT=3
 NHCSUBSET_LIST_REAL=" "
 if [ $month -ge 05 -a $month -le 11 ]; then
    NHCSUBSET_LIST_REAL=$USHDIR/subset4nhc_list.txt
 fi
 NHCSUBSET_LIST_RETRO=$USHDIR/subset4nhc_retrolist.txt
elif [ $machine = WCOSS ]; then
 NHCOUTPUT=$NOSCRUB/emc.glopara/nhc_subset
 NHCSUBSETSH=$DISK_GLOB/emc.glopara/misc/extract_grib2_nhc_retro.sh
 NHCSUBSET_LIST_REAL=" "
 if [ $month -ge 05 -a $month -le 11 ]; then
   NHCSUBSET_LIST_REAL=$DISK_GLOB/emc.glopara/misc/subset4nhc_list.txt
 fi
 NHCSUBSET_LIST_RETRO=$DISK_GLOB/emc.glopara/misc/subset4nhc_retrolist.txt
fi


export VRFYPRCP=YES                # Precip threat scores
export VRFYFITS=YES
export ACPROFit=YES
export SAVEFITS=NO
export VRFYTRAK=YES                # Hurricane tracks
export VRFYRAD=YES                 # Radiance data extract
export VRFYOZN=YES                 # Ozone data extract

export VRFYGENESIS=YES             # Genesis tracks
if [ $machine = WCOSS ] ; then
 export NWROOTGENESIS=/ensemble/save/Jiayi.Peng
elif [ $machine = WCOSS_C ] ; then
  #export NWROOTGENESIS=/gpfs/hps/emc/ensemble/save/Jiayi.Peng
  export NWROOTGENESIS=/gpfs/hps/emc/global/noscrub/emc.glopara/svn/gfs/q3fy17
fi
export GENESISSH=$NWROOTGENESIS/ens_tracker.v2.0.1/gfs_genesis_para.sh
export GETTX_GEN=$NWROOTGENESIS/ens_tracker.v2.0.1/exec/gettrk_gen_g2

NUMPROCVRFYGFS=1
NUMPROCVRFYGDAS=3
npe_node_vrfy=1

# fit2obs
if [ $machine = WCOSS ]; then
 VRFY_MEMORY=27000
 export TIMELIMVRFY=06:00
 #export fitdir=$BASE_VERIF/global/parafits/batrun
 #export PREPQFITSH=$fitdir/subfits_wcoss
 export fitdir=$BASE_VERIF/global/parafits.nems/batrun
 export PREPQFITSH=$fitdir/subfits_wcoss
elif [ $machine = WCOSS_C ]; then
 VRFY_MEMORY=3072
 export TIMELIMVRFY=06:00
 export fitdir=$BASE_VERIF/global/parafits.nems.test/batrun
 export PREPQFITSH=$fitdir/subfits_cray_nems
elif [ $machine = THEIA ]; then
 VRFY_MEMORY=19000
 export fitdir=$BASE_VERIF/global/parafits/batrun
 PREPQFITSH=$fitdir/subfits_theia
fi


## Radiance monitoring parameters
#  ------------------------------
export JOB_QUEUE=$CUE2RUN   # JOB_QUEUE is also used by MinMon

LLQFILE=yes
LLQFILENAME=jobname
MY_RADMON=$BASE_RADMON
export VRFYRAD_DIR=$MY_RADMON/ush
export PDATE=$CDATE
export PDATEm1=`$NDATE -24 $PDATE`
export PDY=`echo $PDATE | cut -c1-8`
export cyc=`echo $PDATE | cut -c9-10`
export PDYm1=`echo $PDATEm1 | cut -c1-8`
export RADMON_SUFFIX=${PSLOT}
export TANKverf=$NOSCRUB/$LOGNAME/radmon
export TANKverf_rad=$TANKverf/stats/$PSLOT/radmon.$PDY
export TANKverf_radM1=$TANKverf/stats/$PSLOT/radmon.$PDYm1
export DATAROOT=$ROTDIR
export COMIN=$ROTDIR
export NWTEST=$BASE_SVN/gfs/$tags
if [ $machine = WCOSS_C ]; then
 if [ $CDUMP = gdas ] ; then
    export JOBGLOBAL=$BASE_SVN/gfs/$tags/gdas.$gdas_ver/jobs/JGDAS_VERFRAD
    export VRFYRADSH=$BASE_SVN/gfs/$tags/gdas.$gdas_ver/driver/test_jgdas_verfrad_cray.sh
 else
    export VRFYRADSH=""    # GFS does not generate radstat, no vrfyrad
 fi
elif [ $machine = WCOSS ]; then
 export VRFYRADSH="$VRFYRAD_DIR/VrfyRad_glbl.sh ${RADMON_SUFFIX} ${RUN_ENVIR} ${CDATE}"
fi


## Ozone monitoring parameters
#  ------------------------------
export OZNDIR=$NOSCRUB/$LOGNAME/ozone/stats/$PSLOT
export VRFYOZNSH=$BASEDIR/ush/VrfyOzn_glbl.sh
export BASEDIR_OZNMON=$BASE_OZNMON/util/Ozone_Monitor


## Minimization  monitoring parameters
#  -----------------------------------
export VRFYMINMON=YES
export MY_MINMON=$BASE_MINMON
export VRFYMIN_DIR=$MY_MINMON/ush
export PDATE=$CDATE
export PDATEm1=`$NDATE -24 $PDATE`
export PDY=`echo $PDATE | cut -c1-8`
export cyc=`echo $PDATE | cut -c9-10`
export PDYm1=`echo $PDATEm1 | cut -c1-8`
export MINMON_SUFFIX=${PSLOT}
export M_TANKverf=$NOSCRUB/$LOGNAME/minmon
export M_TANKverfM0=$M_TANKverf/stats/$PSLOT/$CDUMP.$PDY
export M_TANKverfM1=$M_TANKverf/stats/$PSLOT/$CDUMP.$PDYm1
export DATAROOT=$ROTDIR
export COMIN=$ROTDIR
export NWTEST=$BASE_SVN/gfs/$tags
if [ $machine = WCOSS_C ]; then
 if [ $CDUMP = gdas ] ; then
    export JOBGLOBAL=$BASE_SVN/gfs/$tags/gdas.$gdas_ver/jobs/JGDAS_VMINMON
    export VRFYMINSH=$BASE_SVN/gfs/$tags/gdas.$gdas_ver/driver/test_jgdas_vminmon_cray.sh
 else
    export JOBGLOBAL=$BASE_SVN/gfs/$tags/gfs.$gfs_ver/jobs/JGFS_VMINMON
    export VRFYMINSH=$BASE_SVN/gfs/$tags/gfs.$gfs_ver/driver/test_jgfs_vminmon_cray.sh
 fi
elif [ $machine = WCOSS ]; then
 export VRFYMINSH="$VRFYMIN_DIR/MinMon_DE.sh ${MINMON_SUFFIX} ${RUN_ENVIR} ${CDATE}"
fi


##  VSDB verification parameters
#   ----------------------------
##vsdbhome=$BASE_VERIF/global/tags/vsdb_$verif_ver
vsdbhome=$DISK_GLOB/Fanglin.Yang/VRFY/vsdb
VSDBSH=$vsdbhome/vsdbjob.sh
vsdbsave=$NOSCRUB/$LOGNAME/archive/vsdb_data    # place to save vsdb database
rundir=$STMP/$LOGNAME/vsdb_exp.pr$PSLOT
ARCDIR1=$NOSCRUB/$LOGNAME/archive               # online archive home directory
VSDB_STEP1=YES                                  # compute stats in vsdb format, default=NO
VSDB_STEP2=NO                                   # make vsdb-based maps, default=NO
VRFYG2OBS=YES                                   #grid2obs verification
ndasbufr_arch=/gpfs/hps/emc/global/noscrub/Fanglin.Yang/prepbufr/ndas
ddd=`echo $CDATE | cut -c8-8`
# if [ $ddd -eq 5 -a $cycn -eq 00 ]; then VSDB_STEP2=YES; fi
webhost=rzdm.ncep.noaa.gov                        # webhost(rzdm) computer
webhostid=rzdmid                                  # webhost(rzdm) user name
vlength=240                                       # verification length in hours, default=384 
SEND2WEB=YES                                      # whether or not to send maps to webhost
WEBDIR=/home/people/emc/www/htdocs/gmb/${webhostid}/vsdb/t2mbias/pr$PSLOT
export mdlist="gfs  pr$PSLOT "      # exps (up to 10) to compare in maps
VSDB_START_DATE=20120601                          # starting date for vsdb maps
anltype=gfs                                       # default=gfs, analysis type (gfs or gdas) for verification
ftyplist=pgbq                                     #files used for computing QPF ETS scores

GENGEMPAK=YES
if [ $machine = WCOSS_C -a $GENGEMPAK = YES ]; then 
  APRUN_GEMPAK="aprun -n 34 -N 17 cfp"
  HOMEgfs=$BASE_SVN/gfs/$tags/gfs.$gfs_ver
  FIXgfs=$HOMEgfs/fix
  HOMEgempak=$BASE_SVN/gfs/$tags/gfs.$gfs_ver/gempak
  GFSNAWIPSSH=$HOMEgfs/scripts/exgfs_nawips.sh.ecf
fi
NAWIPSSH=$BASEDIR/ush/nawips.sh

GENGEMPAK_META=YES
NAWIPSMETASH=$BASEDIR/ush/nawips_meta.sh
##GFSMETASH=$BASEDIR/scripts/exgfs_gempak_meta.sh.ecf

