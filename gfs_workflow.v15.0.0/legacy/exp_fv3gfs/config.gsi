npe_node_a=$pe_node                # number of pes per node for AM analysis
NUMPROCANAL=360
NUMPROCANALGDAS=360                # number of tasks for GDAS anal (448)
NUMPROCANALGFS=360                 # number of tasks for GFS anal
NTHREADS_GSI=4                     # number of threads for anal

FORT_BUFFERED=true
ANAL_MEMORY=3072

NTHSTACK_GSI=1024000000            # stack size for anal, default=128000000
TIMELIMANAL=06:00:00               # Wall clock time for AM analysis (hh:mm)
snoid=snod                         # Snow id - default to snod


#  ---------------------
#  global_cycle
#  ---------------------
CYCLESH=$BASE_GSM/ush/global_cycle.sh
CYCLEXEC=$BASE_GSM/exec/global_cycle
APRUNCY=""
if [ $machine = WCOSS_C ]; then APRUNCY="aprun -n 1 -N 1 -j 1 -d 1"; fi
OMP_NUM_THREADS_CY=24
SNOW_NUDGE_COEFF=-2.




#  ---------------------
#  analysis step
#  ---------------------

ANALYSISSH=$SCRDIR_GSI/exglobal_analysis.sh.ecf
ANGUPDATESH=$SCRDIR_GSI/util/global_angupdate/exglobal_angupdate.sh.ecf
FILESTYLEANAL=L
FILESTYLEANGU=L
ANALSH=$JOBSDIR/anal.sh
OBERROR=$BASE_GSI/fix/prepobs_errtable.global
USE_NEWRADBC=YES
USE_CFP=YES
APRUNCFP_ANAL=""
if [ $machine = WCOSS_C ]; then APRUNCFP_ANAL='aprun -q -j1 -n$ncmd -N$npe_node_a -d1 cfp'; fi

COMPRESS=/bin/gzip                 
UNCOMPRESS='/bin/gunzip -f'

if [ $CDATE -lt 2015011412 ] ; then
   FNSNOAJCAP_TMP='$DMPDIR/$CDATE/${CDUMP}x/snogrb_t$JCAP.$LONB.$LATB.$CDUMP.$CDATE'
   FNSNOGJCAP_TMP='$DMPDIR/$GDATE/${GDUMP}x/snogrb_t$JCAP.$LONB.$LATB.$GDUMP.$GDATE'
   FNSNOAJCAP_ENKF_TMP='$DMPDIR/$CDATE/${CDUMP}x/snogrb_t$JCAP_ENKF.$LONA_ENKF.$LATA_ENKF.$CDUMP.$CDATE'
   FNSNOGJCAP_ENKF_TMP='$DMPDIR/$GDATE/${GDUMP}x/snogrb_t$JCAP_ENKF.$LONA_ENKF.$LATA_ENKF.$GDUMP.$GDATE'
   BLENDED_ICE_FILE=$DMPDIR/$CDATE/${CDUMP}x/seaice.5min.blend.grb.$CDUMP.$CDATE
else
   FNSNOAJCAP_TMP='$DMPDIR/$CDATE/${CDUMP}/snogrb_t$JCAP.$LONB.$LATB.$CDUMP.$CDATE'
   FNSNOGJCAP_TMP='$DMPDIR/$GDATE/${GDUMP}/snogrb_t$JCAP.$LONB.$LATB.$GDUMP.$GDATE'
   FNSNOAJCAP_ENKF_TMP='$DMPDIR/$CDATE/${CDUMP}/snogrb_t$JCAP_ENKF.$LONA_ENKF.$LATA_ENKF.$CDUMP.$CDATE'
   FNSNOGJCAP_ENKF_TMP='$DMPDIR/$GDATE/${GDUMP}/snogrb_t$JCAP_ENKF.$LONA_ENKF.$LATA_ENKF.$GDUMP.$GDATE'
   BLENDED_ICE_FILE=$DMPDIR/$CDATE/$CDUMP/seaice.5min.blend.grb.$CDUMP.$CDATE
fi

if [ $CDATE -ge 2014040812 ] ; then
   FNTSFATMP='$DMPDIR/$CDATE/$CDUMP/rtgssthr.grb.$CDUMP.$CDATE'
else
   FNTSFATMP='$DMPDIR/$CDATE/${CDUMP}x/rtgssthr.grb.$CDUMP.$CDATE'
fi

# Turn on lines below if want to run emcsfc package
##BLENDED_ICE_FILE=$COMROT/seaice.5min.blend.grb.$CDUMP.$CDATE
##PREPROCESSSH=$BASEDIR/ush/emcsfc_sfc_prep.sh
##HOMEglobal=$BASE_EMCSFC

FNACNATMP=$BLENDED_ICE_FILE

##USE_JCAP_SNO=NO
export USE_JCAP_SNO=YES      # YES = Use snow analysis with specified resolution; 
                             # NO  = Use snow analysis with half degree resolution 
                             # when the specified resolution snow analysis unavailable in dump directory 
                             # only 574 and 382 are available

NMEM_ENKF=80

## For efmn test, only run first ensemble of size 8
##NMEM_ENKF=8

##LONR_ENKF=$LONB_ENKF
##LATR_ENKF=$LATB_ENKF
##LONF_ENKF=$LONB_ENKF
##LATG_ENKF=$LATB_ENKF

# Change to generate low resolution fhr06 ensemble mean and ensemble member files
JCAP_LORES=$JCAP_ENKF   # set JCAP_LORES to JCAP_ENKF to turn off low res processing
##JCAP_LORES=254        # generate T254 chgres'd EnKF forecasts. gfs_truncate_enkf.sh not yet works for nemsio 


# Project T254 ensmemble onto linear grid (512x256)
NMEM_ENS=$NMEM_ENKF
JCAP_ENS=$JCAP_ENKF
NLON_ENS=$LONA_ENKF
NLAT_ENS=`expr $LATA_ENKF + 2`

HYBRID_ENSEMBLE="l_hyb_ens=.true.,n_ens=80,beta1_inv=0.125,s_ens_h=800.,s_ens_v=-0.8,generate_ens=.false.,uv_hyb_ens=.true.,jcap_ens=$JCAP_ENS,nlat_ens=$NLAT_ENS,nlon_ens=$NLON_ENS,aniso_a_en=.false.,jcap_ens_test=$JCAP_ENS,readin_localization=.true.,oz_univ_static=.false.,"
STRONGOPTS="tlnmc_option=2,"


# 4DEnVar setup
l4densvar=".true."
lwrite4danl=".false."
SETUP_4DVAR=""
JCOPTS_4DVAR=""
STRONGOPTS_4DVAR=""
if [ $l4densvar = .true. ] ; then
   SETUP_4DVAR="niter(1)=50,niter(2)=150,niter_no_qc(1)=25,l4densvar=.true.,ens_nstarthr=3,nhr_obsbin=1,nhr_assimilation=6,lwrite4danl=${lwrite4danl},"
   JCOPTS_4DVAR="ljc4tlevs=.true.,"
   STRONGOPTS_4DVAR="tlnmc_option=3,"
fi

SETUP="$SETUP_4DVAR"
JCOPTS="$JCOPTS_4DVAR"
STRONGOPTS="$STRONGOPTS_4DVAR"


# Set GDAS / GFS generation code
if [ $CDUMP = gdas ] ; then
   export IGEN=82
fi
if [ $CDUMP = gfs ] ; then
   export IGEN=81
fi

##eval SIGGESENS=$COMROT/sfg_${CDATE}_fhr06
SMOOTH_ENKF=YES

if [ $l4densvar = .false. ] ; then
   SFCG04=/dev/null
   SFCG05=/dev/null
   SFCG07=/dev/null
   SFCG08=/dev/null
   SIGG04=/dev/null
   SIGG05=/dev/null
   SIGG07=/dev/null
   SIGG08=/dev/null
fi


# Set parameters for analysis grid
JCAP_A=574
NLAT_A=578
NLON_A=1152
##JCAP_A=878
##NLAT_A=882
##NLON_A=1760
##JCAP_A=1148
##NLON_A=2304
##NLAT_A=1154


# Fix files and parm files
if [ $machine = WCOSS ]; then
##RTMFIX=/nwprod/fix/crtm_v2.1.3
 RTMFIX=/nwprod2/lib/crtm/${crtm_ver}/fix
elif [ $machine = WCOSS_C ] ; then
 crtm_version=`echo $crtm_ver | cut -c2-6`
 module load crtm-intel/$crtm_version
 RTMFIX=$CRTM_FIX
elif [ $machine = THEIA ]; then
 RTMFIX=/scratch4/NCEPDEV/da/save/Michael.Lueken/nwprod/CRTM_REL-$crtm_ver/crtm_v$crtm_ver/fix
fi

ATMSFILTER=$BASE_GSI/fix/atms_beamwidth.txt
SATANGL=$BASE_GSI/fix/global_satangbias.txt

SATINFO=$BASE_GSI/fix/global_satinfo.txt
if [ $CDATE -ge 2013041500 -a $CDATE -lt 2013070318 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2013041500
fi
if [ $CDATE -ge 2013070318 -a $CDATE -lt 2013082012 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2013070318
fi
if [ $CDATE -ge 2013082012 -a $CDATE -lt 2014092612 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2013082012
fi
if [ $CDATE -ge 2014092612 -a $CDATE -lt 2014101512 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2014092612
fi
if [ $CDATE -ge 2014101512 -a $CDATE -lt 2015011412 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2014101512
fi
if [ $CDATE -ge 2015011412 -a $CDATE -lt 2015070218 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2015011412
fi
if [ $CDATE -ge 2015070218 -a $CDATE -lt 2015100118 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2015070218
fi
if [ $CDATE -ge 2015100118 -a $CDATE -lt 2016011912 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2015100118
fi
if [ $CDATE -ge 2016011912 -a $CDATE -lt 2016020312 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2016011912
fi
if [ $CDATE -ge 2016020312 -a $CDATE -lt 2016090912 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2016020312
fi
if [ $CDATE -ge 2016090912 -a $CDATE -le 2016101700 ] ; then
  SATINFO=$BASE_GSI/fix/global_satinfo.txt.2016101700
fi


##CRISIS turn off Metop-A HIRS4 2016011418 GDAS
##SATINFO=/global/save/emc.glopara/para_gfs/pr4devb/global_satinfo.txt
##CRISIS trun on  Metop-A HIRS4 2016013118 GFS

# Pick up Saphir and GMI data from ${CDUMP}x.
#  Saphir avaialble from 2016061000
#  GMI available from 2016080212
GMI1CRBF=$DMPDIR/$CDATE/${CDUMP}x/gmi1cr.$CDUMP.$CDATE
SAPHIRBF=$DMPDIR/$CDATE/${CDUMP}x/saphir.$CDUMP.$CDATE

# Pick up db data from ${CUMP}x
ATMSDB=$DMPDIR/$CDATE/${CDUMP}x/atmsdb.$CDUMP.$CDATE
CRISDB=$DMPDIR/$CDATE/${CDUMP}x/crisdb.$CDUMP.$CDATE
IASIDB=$DMPDIR/$CDATE/${CDUMP}x/iasidb.$CDUMP.$CDATE

SCANINFO=$BASE_GSI/fix/global_scaninfo.txt
CONVINFO=$BASE_GSI/fix/global_convinfo.txt
if [ $CDATE -lt 2014041400 ] ; then
  CONVINFO=$BASE_GSI/fix/global_convinfo.txt.2013041500
fi
if [ $CDATE -ge 2014041400 -a $CDATE -lt 2016031500 ] ; then
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.2014041400
fi
INSITUINFO=$BASE_GSI/fix/global_insituinfo.txt
OZINFO=$BASE_GSI/fix/global_ozinfo.txt
PCPINFO=$BASE_GSI/fix/global_pcpinfo.txt
ANAVINFO=$BASE_GSI/fix/global_anavinfo.l64.txt
AEROINFO=$BASE_GSI/fix/global_aeroinfo.txt
HYBENSINFO=$BASE_GSI/fix/global_hybens_locinfo.l64.txt


# new berror first used in 2010102200 (31 may 2011)
if [ $JCAP_A = "1534" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y1154.f77
elif [ $JCAP_A = "1148" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y1154.f77
elif [ $JCAP_A = "878" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y882.f77
elif [ $JCAP_A = "574" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y578.f77
elif [ $JCAP_A = "382" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y386.f77
elif [ $JCAP_A = "254" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y258.f77
elif [ $JCAP_A = "170" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y192.f77
elif [ $JCAP_A = "126" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y130.f77
elif [ $JCAP_A = "62" ] ; then
  BERROR=$BASE_GSI/fix/Big_Endian/global_berror.l64y96.f77
else
 echo 'Invalid JCAP_A'
 exit
fi

# Pick up special datasets
eval OSCATBF='$DMPDIR/$CDATE/${CDUMP}x/oscatw.$CDUMP.$CDATE'

eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'

# satwnd files in Kate's dump directory prior to 2013062118 were NOT dumped
# using a +/-3 hour window.   ${CDUMP}y files prior to 2013062118 were dumped
# using a +/- 1.5 hour window.  We do NOT want to use the +/- 1.5 hour window
# dump files in T1534 retrospective parallels
#
# Note:  VIIRS data in ${CDUMP}v 2015011518

if [ $CDATE -ge 2015011412 ] ; then
  eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
  if [ $CDATE -ge 2015011518 -a $CDATE -le 2015081006 ] ; then
     eval SATWND='$DMPDIR/$CDATE/${CDUMP}v/satwnd.$CDUMP.$CDATE'
  fi
else
  eval SATWND='$DMPDIR/$CDATE/${CDUMP}y/satwnd.$CDUMP.$CDATE'
fi

if [ $CDATE -lt 2012021418 ]; then
   eval SEVIRIBF='$DMPDIR/$CDATE/${CDUMP}x/sevcsr.$CDUMP.$CDATE'
   eval ATMSBF='$DMPDIR/$CDATE/${CDUMP}x/atms.$CDUMP.$CDATE'
fi

if [ $CDATE -le 2012101018 ]; then
   eval CRISBF='$DMPDIR/$CDATE/${CDUMP}x/cris.$CDUMP.$CDATE'
fi

# NOAA-19 SBUV/2 dumped in operations as of 2009082515
if [ $CDATE -gt 2009082515 ] ; then
   eval SBUVBF='$DMPDIR/$CDATE/$CDUMP/osbuv8.$CDUMP.$CDATE'
fi

# MLS ozone version 2.0 before 2013010306.   Version 3.0 starting 2013010306.
# Overwrite MLS entry in OBSINPUT for dates before 2013010306.
# NOTE:  scripting below DOES NOT WORK for GSI
if [ $CDATE -lt 2013010306 ] ; then
  export OBS_INPUT="   mlsbufr        mls20       aura        mls20_aura          0.0     0     0"
fi

# NOAA-19 AMSU-A, HIRS/4, and MHS dumped in operations as of 2009092915
# Revert back to operational dump file
if [ $CDATE -gt 2009092915 ] ; then
   eval B1AMUA='$DMPDIR/$CDATE/$CDUMP/1bamua.$CDUMP.$CDATE'
   eval B1HRS4='$DMPDIR/$CDATE/$CDUMP/1bhrs4.$CDUMP.$CDATE'
   eval B1MHS='$DMPDIR/$CDATE/$CDUMP/1bmhs.$CDUMP.$CDATE'
fi

# Skip data sets which operations skips
if [ $CDATE -gt 2009053115 ] ; then
 export AMSREBF=/dev/null
# export SSMITBF=/dev/null
fi

#  GOES hourly wind dump not always available.  When not available,
#  process operational satwnd dump

if [ $CDATE -lt 2012070100 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2012111600 -a $CDATE -le 2012112118 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2012112900 -a $CDATE -le 2012121312 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2013031006 -a $CDATE -le 2013031012 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2013041500 -a $CDATE -le 2013051418 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2013051718 -a $CDATE -le 2013052006 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -ge 2013081218 -a $CDATE -le 2013081306 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi
if [ $CDATE -eq 2013082018 ]; then
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   PRVT=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   OBERROR=$BASE_GSI/fix/prepobs_errtable.global.3hr_satwnd
   CONVINFO=$BASE_GSI/fix/global_convinfo.txt.3hr_satwnd
fi

if [ ! -s $SATWND ] ; then
   SATWNDV=$SATWND
   eval SATWND='$DMPDIR/$CDATE/${CDUMP}/satwnd.$CDUMP.$CDATE'
   echo "***WARNING***  using $SATWND instead of $SATWNDV"
   ls -l $SATWNDV
   ls -l $SATWND
fi

# Set SATWNDTMP for prep step
SATWNDTMP=$SATWND


#
# Executables
GSIEXEC=$BASE_GSI/exec/global_gsi
 
SET_BIASAT=YES

#  ---------------------
#  enkf steps
#  ---------------------
DOENKF=YES
DOHYBVAR=YES

MHYBA00GDAS=1
MHYBA06GDAS=1
MHYBA12GDAS=1
MHYBA18GDAS=1
MHYBA00GFS=1
MHYBA06GFS=1
MHYBA12GFS=1
MHYBA18GFS=1
mefcs=1

JCAP_HIGH=$JCAP


# 300s deltim on 768x384, 450s on 512x256
# since T254 forecast run on 768x384, use 300s for forecast and gsi
DELTIM_ENKF=900
DTPHYS_ENKF=450

BERROR_ENKF=$BASE_GSI/fix/Big_Endian/global_berror.l64y${NLAT_ENS}.f77

NMEM_ENKF_GRP=8

# enkf check status step
ECHKSH=$JOBSDIR/echk.sh
TIMELIMECHK=00:15:00
RUNLIMECHK=250

# enkf ensemble mean data selection
EOBSSH=$JOBSDIR/eobs.sh
INFOLEVELOBS=1
FILESTYLEEOBS=L
npe_node_eobs=24
npe_node_eobs_cfp=12
if [ $machine = WCOSS -o $machine = WCOSS_C ]; then
 NUMPROCEOBS=144
 NTHREADS_EOBS=4
elif [ $machine = THEIA ]; then
 NUMPROCEOBS=180
 NTHREADS_EOBS=1
fi
NTHSTACK_EOBS=1024000000
TIMELIMEOBS=00:30:00
eobs_delay=0000
EOBS_MEMORY=3072
APRUNCFP_EOBS=""
if [ $machine = WCOSS_C ]; then APRUNCFP_EOBS='aprun -q -j1 -n$ncmd -N$npe_node_eobs_cfp -d1 cfp'; fi


# enkf ensemble member innovations
EOMNSH=$JOBSDIR/eomn.sh
EOMGSH=$JOBSDIR/eomg.sh
ENKFINVOBSSH=$SCRDIR_ENKF/exglobal_enkf_innovate_obs.sh.ecf
INFOLEVELOMG=1
FILESTYLEEOMN=L
NUMPROCEOMN=1
npe_node_eomn=1
NTHREADS_EOMN=1
TIMELIMEOMN=03:00:00
RUNLIMEOMN=250

FILESTYLEEOMG=L
npe_node_eomg=24
npe_node_eomg_cfp=12
NUMPROCEOMG=144
NTHREADS_EOMG=4
NTHSTACK_EOMG=1024000000
TIMELIMEOMG=02:30:00
EOMG_MEMORY=3072
APRUNCFP_EOMG=""
if [ $machine = WCOSS_C ]; then APRUNCFP_EOMG='aprun -q -j1 -n$ncmd -N$npe_node_eomg_cfp -d1 cfp'; fi


# enkf update (analysis)
meupd=1
npe_node_eupd=$pe_node
if [ $machine = WCOSS -o $machine = WCOSS_C ]; then
 pe_node_eupd=6
 NUMPROCEUPD=240
 NTHREADS_EUPD=4
elif [ $machine = THEIA ]; then
 pe_node_eupd=12
 NUMPROCEUPD=120
 NTHREADS_EUPD=1
fi
NTHREADS_ENKF=$NTHREADS_EUPD
NTHSTACK_ENKF=1024000000

TIMELIMEUPD=01:00:00
INFOLEVELUPD=1
FILESTYLEEUPD=L
ENKFUPDSH=$SCRDIR_ENKF/exglobal_enkf_update.sh.ecf
ENKFUPDEXEC=$BASE_ENKF/exec/global_enkf
APRUNCFP_EUPD=""
if [ $machine = WCOSS_C ]; then APRUNCFP_EUPD='aprun -q -j1 -n$ncmd -N$npe_node_eupd -d1 cfp'; fi

# enkf center
NTHRECEN=1
#npe_node_ecen=24
npe_node_ecen=6 
NUMPROCECEN=80
TIMELIMECEN=01:00:00
ecen_delay=0000
RECENATMPEXEC=$BASE_ENKF/exec/recentersigp.x
ADDERRSPECEXEC=$BASE_ENKF/exec/adderrspec_nmcmeth_spec.x
ECENSH=$JOBSDIR/ecen.sh
FILESTYLEECEN=L
ENKFINFCENSH=$SCRDIR_ENKF/exglobal_enkf_inflate_recenter.sh.ecf
ECEN_MEMORY=3072

##SCALEFACT=32   # reactivate 2013120506 GDAS
##SCALEFACT=05   # reactivate 2013120512 GDAS
SCALEFACT=00   # effective 2015031612 GDAS


# enkf forecast
TIMELIMEFMN=03:00:00
RUNLIMEFMN=250
EFMNSH=$JOBSDIR/efmn.sh
EFCSSH=$JOBSDIR/efcs.sh
ENKFFCSTSH=$SCRDIR_ENKF/exglobal_enkf_fcst_nems.sh.ecf

SET_STP_SEED=YES     # set stochastic physics seeds 2013120512 gdas
##SET_STP_SEED=NO   # turn off 2013120506 gdas

if [ $machine = WCOSS ]; then
 npe_node_efcs=24
 NTHREADS_EFCS=4
 NUMPROCEFCS=96
elif [ $machine = WCOSS_C ]; then
 npe_node_efcs=24
 NTHREADS_EFCS=2
 NUMPROCEFCS=144
elif [ $machine = THEIA ]; then
 npe_node_efcs=6
 NTHREADS_EFCS=1
 NUMPROCEFCS=180
fi
TIMELIMEFCS=02:00:00
EFCS_MEMORY=210

FHROT_ENKF=0
FHOUT_ENKF=1
FHMAX_ENKF=9
FHOUTHF_ENKF=1
FHMAXHF_ENKF=9
FHRES_ENKF=24
FHZER_ENKF=6
FHDFI_ENKF=3
FHCYC_ENKF=24


# enkf post processing
MPMD_ECEN=NO
#npe_node_epos=$pe_node
npe_node_epos=6         
NTHREADS_EPOS=1
NUMPROCEPOS=81
TIMELIMEPOS=01:00:00    # increase TIMELIMEPOS if JCAP_LORES < JCAP_ENKF on non-WCOSS machines
GETSFCENSMEANEXEC=$BASE_ENKF/exec/getsfcensmeanp.x
GETNSTENSMEANEXEC=$BASE_ENKF/exec/getnstensmeanp.x
GETSFCNSTENSUPDEXEC=$BASE_ENKF/exec/getsfcnstensupdp.x
GETATMENSMEANEXEC=$BASE_ENKF/exec/getsigensmeanp_smooth.x
GETATMENSSTATEXEC=$BASE_ENKF/exec/getsigensstatp.x
HYBENSMOOTH=$BASE_ENKF/fix/global_hybens_smoothinfo.l64.txt
EPOSSH=$JOBSDIR/epos.sh
ENKFPOSTSH=$SCRDIR_ENKF/exglobal_enkf_post.sh.ecf

if [ $step1 = epos ] ; then
   APRUN_MPMD=""
   if [ $machine = WCOSS_C ]; then APRUN_MPMD='aprun -q -j1 -n${NUMPROCEPOS} -N24 -d1 cfp'; fi
   export APRUNC=""
   export CHGRESTHREAD_LORES=1
fi

NUMPROCEPOS00GDAS=4
NUMPROCEPOS06GDAS=4
NUMPROCEPOS12GDAS=4
NUMPROCEPOS18GDAS=4

EPOS_SHARED=YES
EPOS_MEMORY=32
TIMELIMEPOS00GDAS=00:15:00
TIMELIMEPOS06GDAS=00:15:00
TIMELIMEPOS12GDAS=00:15:00
TIMELIMEPOS18GDAS=00:15:00
CCEPOS=NO
